{"version":3,"sources":["webpack:///./src/scss/styles.scss","webpack:///$stdin","webpack:///./src/common/scss/global.scss","webpack:///./src/common/scss/utils.scss","webpack:///./src/common/scss/no-results-message.scss","webpack:///./src/common/scss/buttons.scss","webpack:///./src/common/scss/dropdown.scss","webpack:///./src/common/scss/tinymce.scss","webpack:///./src/common/scss/input.scss","webpack:///./src/common/scss/modal.scss","webpack:///./src/common/scss/social-icons.scss","webpack:///./src/common/scss/settings-panel.scss","webpack:///./src/common/scss/auth-page.scss","webpack:///./src/common/scss/perfect-scrollbar-theme.scss","webpack:///./node_modules/perfect-scrollbar/css/perfect-scrollbar.css","webpack:///./src/common/scss/appearance-editor-select-box.scss","webpack:///./src/common/scss/responsive-material-table.scss","webpack:///./src/common/scss/multiline-mat-menu-item.scss","webpack:///./src/common/scss/setting-checkbox.scss","webpack:///./src/common/scss/selection-list.scss","webpack:///./src/common/shared/charts/chartist/chartist-styles.scss","webpack:///./node_modules/chartist/dist/scss/chartist.scss","webpack:///./src/common/scss/appearance-editor.scss","webpack:///./src/common/scss/admin-pill-nav.scss","webpack:///./src/common/scss/dark-mode-adjustments.scss","webpack:///./stdin"],"names":[],"mappings":"AAq7DE,mBACE,gBACA,eACA,kBCl7DiB,CDk7DjB,gBCl7DmC,CDk7DnC,WAGF,oCAEE,cAGF,oCACE,eA3TF,yCA5NE,aC35CY,CD25CZ,WC35CwB,CD25CxB,gBC35C0C,CD25C1C,WA8NA,gBAGF,sCAjOE,aCv5CY,CDu5CZ,WCv5CwB,CDu5CxB,gBCv5C0C,CDu5C1C,WAmOA,gBAGF,6CAtOE,aCn5CY,CDm5CZ,WCn5CwB,CDm5CxB,gBCn5C0C,CDm5C1C,WAwOA,gBAGF,6CA3OE,aC/4CY,CD+4CZ,WC/4CwB,CD+4CxB,gBC/4C0C,CD+4C1C,WA6OA,gBAMF,2BAnPE,yBC34CyB,CD24CzB,WC34CqC,CD24CrC,gBC34CuD,CD24CvD,WA4PA,gBAGF,2BA/PE,yBCv4CyB,CDu4CzB,WCv4CqC,CDu4CrC,gBCv4CuD,CDu4CvD,WAwQA,gBAGF,6BA3QE,aCn4CY,CDm4CZ,WCn4CwB,CDm4CxB,gBCn4C0C,CDm4C1C,WA+QF,sCA/QE,aCh4CY,CDg4CZ,WCh4CwB,CDg4CxB,gBCh4C0C,CDg4C1C,WAkRA,4CACE,gBAIJ,wBAvRE,aC13CY,CD03CZ,WC13CwB,CD03CxB,gBC13C0C,CD03C1C,WA2RF,8CA3RE,cCv3Ca,CDu3Cb,YCv3C0B,CDu3C1B,gBCv3C4C,CDu3C5C,WAYF,sBAiRE,gBAGF,8CAhSE,aCl3CY,CDk3CZ,WCl3CwB,CDk3CxB,gBCl3C0C,CDk3C1C,WAYF,sBAsRE,gBAGF,8CArSE,aC72CY,CD62CZ,WC72CwB,CD62CxB,gBC72C0C,CD62C1C,WAYF,uBA2RE,gBAGF,8CA1SE,aCx2CY,CDw2CZ,WCx2CwB,CDw2CxB,gBCx2C0C,CDw2C1C,WA4SA,gBA+PF,4BA3iBE,aCp2CY,CDo2CZ,WCp2CwB,CDo2CxB,gBCp2C0C,CDo2C1C,WAssBF,4GAGI,kBCziEe,CDyiEf,gBCziEiC,CDyiEjC,WACA,eACA,gBAwFJ,mBAgCA,UA/BE,kBC/nEiB,CD+nEjB,gBC/nEmC,CD+nEnC,WAmCF,gBAEI,eACA,gBAIJ,iCACE,eAGF,qCAEE,eAyHF,cACE,kBCxxEiB,CDwxEjB,gBCxx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,aACA,kBAGF,qCACE,iBACA,gBACA,gBAGF,0CACE,iBAIJ,0BACE,YAGF,0BACE,YACA,aACA,kBACA,gBAGF,0BACE,iBACA,gBACA,kBACA,kBAGF,+BACE,iBACA,gBACA,kBACA,gBCpDJ,gBACE,eACA,SACA,cACA,aACA,mBACA,iBACA,UACA,gBACA,kBACA,yBACA,sBACA,qBACA,UACA,eACA,mBAGF,0BACE,gCACA,qBCpBF,oBACE,YAEA,mCACE,aAGF,8BACE,iBACA,+BACA,eCVJ,iBACE,YACA,cAEA,gCACE,YAGF,4BACE,kDACA,kDACA,UCXJ,iBACE,cACA,WAGE,8IACE,qBAGF,iCACE,cAIJ,wBACE,eACA,cAGF,mBACE,+BACA,eAGF,oDACE,sBACA,cACA,mBAGF,sGACE,cACA,WACA,YACA,cACA,2CACA,aACA,SACA,kBACA,mBACA,eACA,oBACA,6BACA,sBACA,kBAMA,sIACE,gBAGF,0IACE,WAGF,8IACE,eACA,WAIJ,wBACE,sBAIF,kCACE,YAGF,0BACE,YACA,aAGF,oCACE,aAEA,0CACE,OAIA,4DACE,0BACA,6BACA,kBAGF,2IACE,yBACA,4BAKF,sDACE,yBACA,4BACA,iBAGF,+HACE,0BACA,6BAMR,yBACE,aAEA,0CACE,kBACA,cAEA,qDACE,eAMJ,8BACE,mBC3HF,8BACE,kBACA,MACA,OAGF,gCACE,kBAGF,wBACE,aACA,mBACA,kBACA,gBAEA,2BACE,iBACA,gBACA,WACA,cACA,SACA,iBAIJ,8BACE,kBACA,gBACA,mBAGF,8BACE,yBACA,oBAGF,wBACE,cACA,WACA,YACA,iBACA,+BACA,iGRizE6B,CQjzE7B,2BACA,YAEA,8BACE,wDAGF,kCACE,WACA,YAIJ,kBACE,cAEA,yBACE,eAEA,sCACE,mBAKN,0BACE,eACA,cC1EF,oBACE,aAGF,2BACE,WACA,YACA,iBACA,iBACA,kBACA,kBAEA,oCACE,yBACA,WAGF,mCACE,yBACA,WAGF,kCACE,yBACA,WAGF,gCACE,yBACA,WAGF,gCACE,yBACA,WAGF,qCACE,WACA,YACA,iBACA,cCzCN,gBACE,cACA,mBACA,2CACA,gBACA,2BACA,4BACA,sCACA,kBACA,kBAEA,sBACE,SAGF,wBACE,mBAEA,+BACE,eACA,kBACA,WACA,0BAGF,kCACE,iBACA,+BASF,4CAJA,sKACE,gBAMA,mEACE,kBAGF,kDACE,YAIJ,mCACE,mBACA,cACA,gBAGF,wCACE,0BAIJ,6BACE,iBAGF,4BACE,gBAGF,+BACE,mBAGF,wBACE,yBACA,aACA,cACA,kBACA,yBACA,8BACA,gBAEA,0BACE,eACA,iBACA,gBACA,sBAGF,+BACE,iBACA,gBACA,WAGF,+BACE,gBAGF,oCAEE,qBACA,2CAGF,yCACE,yBACA,8BAGF,uCACE,yBACA,8BAIJ,oCACE,2CACA,WACA,cAGF,6BACE,+CACA,kDACA,iBACA,mBACA,gBAEA,uCAGE,2IAFA,qBAMA,6CACE,cAIJ,8CACE,mBAGF,2CACE,gBACA,cAGF,wCACE,YACA,UACA,SAGF,0CACE,mBAIJ,kCACE,kBACA,SACA,OAGF,+BACE,0BAGF,uBACE,gBC3KJ,WACE,aACA,aACA,uBACA,mBACA,kDAEA,uBACE,kBACA,cACA,YACA,kBACA,sCACA,2CACA,kBAEA,sCACE,cACA,cACA,kBAGF,wCACE,+BAGF,qCACE,aACA,YACA,gBAGF,6BACE,cACA,WACA,mBAEA,iCACE,cACA,YACA,YAIJ,+CACE,WACA,kBAEA,sDACE,iBACA,WAGF,mDACE,cAIJ,wCACE,kBAEA,8CACE,iBACA,gBACA,oBACA,YACA,iBACA,2CACA,sCACA,cAGF,+CACE,kBACA,MACA,UACA,SACA,eACA,mBACA,yBACA,WACA,iBACA,gBACA,gBACA,uBAEA,yCAdF,+CAeI,gBACA,UACA,yBACA,cACA,oBACA,eACA,gBAIJ,yDACE,eACA,kBACA,WACA,SAEA,+DACE,qBCvGV,IACE,kBCAA,0BACA,qBACA,wBACA,kBACA,sBDFA,gBACE,WCOJ,YACE,aACA,UACA,sCb4pFwC,Ca5pFxC,mBACA,kEACA,YAEA,SAEA,kBAGF,YACE,aACA,UACA,sCb2pFwC,Ca3pFxC,mBACA,kEACA,WAEA,QAEA,kBAGF,oDAEE,cACA,6BAGF,oJAME,WAGF,kJAME,sBACA,WAMF,aACE,sBACA,kBACA,sCbupFwC,CavpFxC,uBACA,sEACA,WAEA,WAEA,kBAGF,aACE,sBACA,kBACA,sCbspFwC,CatpFxC,sBACA,qEACA,UAEA,UAEA,kBAGF,oGAGE,sBACA,YAGF,oGAGE,sBACA,WAIF,oCACE,IACE,yBAIJ,sEACE,IACE,yBCjHJ,iBACE,0BACA,kBACA,oBACA,YACA,UACA,WCAA,oCADF,2BAEI,UACA,yBACA,YACA,gBACA,SAEA,sCACE,yBACA,UAGF,0CACE,6BACA,gBAOF,2CAJA,oDACE,aAOF,yCACE,eACA,gBACA,cACA,YAEA,+CACE,mBAGF,gDACE,2BAKJ,oCACE,cACA,gBACA,YACA,aACA,gBACA,eACA,kBhBmYJ,wCCk4EiD,CDl4EjD,2BCk4EsF,CDl4EtF,4BgBjYI,kBAEA,iDACE,gBAIJ,2CACE,aAGF,qCACE,cACA,aAEA,mDACE,eAKF,+CACE,yBACA,eACA,gBACA,kBACA,+BAIJ,2FACE,aAGF,4CACE,kBACA,WACA,UACA,SACA,UAGF,6CACE,WACA,oBClGN,uCACE,cACA,mBACA,mBACA,YACA,gBACA,kBACA,iBAEA,8CACE,iBAGF,oDACE,+BACA,eAGF,2DACE,cAIJ,sBACE,gCAEA,6BACE,gBC3BJ,0BACE,mBAEA,qCACE,gBAGF,wCACE,mBAGF,4BACE,+BACA,iBACA,gBACA,eCbA,mDACE,2CAIJ,kCACE,aACA,mBACA,aACA,eACA,kBAEA,wCACE,cACA,mBAGF,uDACE,cACA,WAIJ,gCACE,iBAGF,uCACE,SAGF,wCACE,kBACA,gBAEA,8CACE,0BClBN,WACE,aAEA,0CAHF,WAII,cACA,gBAEA,kBACE,mBACA,iBAMN,cACE,gBACA,YACA,iBAIF,wBACE,WACA,UACA,gBAIF,SACE,iBAKA,+CACE,yBADF,+CACE,yBADF,+CACE,yBADF,+CACE,yBADF,+CACE,yBADF,+CACE,yBADF,+CACE,yBADF,+CACE,yBADF,+CACE,yBADF,gDACE,yBADF,gDACE,yBADF,gDACE,yBADF,gDACE,yBADF,gDACE,yBC0DF,UAxDA,8BACA,+BACA,iBACA,cAyDA,iDArEA,cAKA,aAqEA,kDAEE,0BAGF,iCAhGA,qBAIA,2BAGE,gBA4FA,kBAGF,+BAtGA,uBAIA,2BAGE,gBAkGA,kBAGF,+BA5GA,qBAIA,yBAKE,iBAsGA,gBAGF,6BAlHA,qBAIA,2BAGE,gBA8GA,kBAGF,+CAxHA,qBAIA,uBAOE,kBAgHA,kBAGF,6CA9HA,uBAIA,uBAOE,kBAsHA,kBAGF,kEApIA,qBAIA,2BAGE,gBAgIA,kBAGF,gEA1IA,uBAIA,2BAGE,gBAsIA,kBAGF,gEAhJA,mBAIA,yBAKE,iBA2IA,gBAGF,8DAvJA,mBAIA,2BAGE,gBAmJA,gBAGF,SA5HA,sBACA,iBAGE,qBA4HF,oBACE,UAGF,UA3HA,kBACA,qBA8HA,SA1HA,UACA,iBA6HA,SArHA,YACA,gBAwHA,QApHA,UACA,kBAuHA,gBAnHA,UACA,kBAIA,+FACE,eAGF,oFACE,aALF,+FACE,eAGF,oFACE,aALF,+FACE,eAGF,oFACE,aALF,+FACE,eAGF,oFACE,aALF,+FACE,eAGF,oFACE,aALF,+FACE,eAGF,oFACE,aALF,+FACE,eAGF,oFACE,aALF,+FACE,eAGF,oFACE,aALF,+FACE,eAGF,oFACE,aALF,+FACE,eAGF,oFACE,aALF,+FACE,eAGF,oFACE,aALF,+FACE,eAGF,oFACE,aALF,+FACE,eAGF,oFACE,aALF,+FACE,eAGF,oFACE,aALF,+FACE,eAGF,oFACE,aA6HE,WAxOJ,cACA,kBACA,WAEA,kBACE,cACA,WACA,WACA,QACA,SACA,oBAGF,iBACE,WACA,cACA,WAGF,eACE,cACA,kBACA,MACA,OAiNE,iBAxOJ,cACA,kBACA,WAEA,wBACE,cACA,WACA,WACA,QACA,SACA,sBAGF,uBACE,WACA,cACA,WAGF,qBACE,cACA,kBACA,MACA,OAiNE,iBAxOJ,cACA,kBACA,WAEA,wBACE,cACA,WACA,WACA,QACA,SACA,8BAGF,uBACE,WACA,cACA,WAGF,qBACE,cACA,kBACA,MACA,OAiNE,gBAxOJ,cACA,kBACA,WAEA,uBACE,cACA,WACA,WACA,QACA,SACA,8BAGF,sBACE,WACA,cACA,WAGF,oBACE,cACA,kBACA,MACA,OAiNE,gBAxOJ,cACA,kBACA,WAEA,uBACE,cACA,WACA,WACA,QACA,SACA,mBAGF,sBACE,WACA,cACA,WAGF,oBACE,cACA,kBACA,MACA,OAiNE,mBAxOJ,cACA,kBACA,WAEA,0BACE,cACA,WACA,WACA,QACA,SACA,mBAGF,yBACE,WACA,cACA,WAGF,uBACE,cACA,kBACA,MACA,OAiNE,kBAxOJ,cACA,kBACA,WAEA,yBACE,cACA,WACA,WACA,QACA,SACA,8BAGF,wBACE,WACA,cACA,WAGF,sBACE,cACA,kBACA,MACA,OAiNE,gBAxOJ,cACA,kBACA,WAEA,uBACE,cACA,WACA,WACA,QACA,SACA,qBAGF,sBACE,WACA,cACA,WAGF,oBACE,cACA,kBACA,MACA,OAiNE,mBAxOJ,cACA,kBACA,WAEA,0BACE,cACA,WACA,WACA,QACA,SACA,6BAGF,yBACE,WACA,cACA,WAGF,uBACE,cACA,kBACA,MACA,OAiNE,gBAxOJ,cACA,kBACA,WAEA,uBACE,cACA,WACA,WACA,QACA,SACA,mBAGF,sBACE,WACA,cACA,WAGF,oBACE,cACA,kBACA,MACA,OAiNE,kBAxOJ,cACA,kBACA,WAEA,yBACE,cACA,WACA,WACA,QACA,SACA,sBAGF,wBACE,WACA,cACA,WAGF,sBACE,cACA,kBACA,MACA,OAiNE,kBAxOJ,cACA,kBACA,WAEA,yBACE,cACA,WACA,WACA,QACA,SACA,8BAGF,wBACE,WACA,cACA,WAGF,sBACE,cACA,kBACA,MACA,OAiNE,WAxOJ,cACA,kBACA,WAEA,kBACE,cACA,WACA,WACA,QACA,SACA,mBAGF,iBACE,WACA,cACA,WAGF,eACE,cACA,kBACA,MACA,OAiNE,gBAxOJ,cACA,kBACA,WAEA,uBACE,cACA,WACA,WACA,QACA,SACA,mBAGF,sBACE,WACA,cACA,WAGF,oBACE,cACA,kBACA,MACA,OAiNE,mBAxOJ,cACA,kBACA,WAEA,0BACE,cACA,WACA,WACA,QACA,SACA,qBAGF,yBACE,WACA,cACA,WAGF,uBACE,cACA,kBACA,MACA,OAiNE,kBAxOJ,cACA,kBACA,WAEA,yBACE,cACA,WACA,WACA,QACA,SACA,8BAGF,wBACE,WACA,cACA,WAGF,sBACE,cACA,kBACA,MACA,OAiNE,kBAxOJ,cACA,kBACA,WAEA,yBACE,cACA,WACA,WACA,QACA,SACA,mBAGF,wBACE,WACA,cACA,WAGF,sBACE,cACA,kBACA,MACA,OCrBF,qBACE,qFACA,eACA,UACA,2CACA,wCACA,mBACA,gBACA,uBACA,aACA,qBACA,gBACA,mBACA,sBACA,mBACA,kBACA,sCACA,YACA,WACA,iBACA,cACA,0BAEA,2BACE,2CAGF,+BACE,+BAGF,2BACE,cAGF,8BACE,cACA,iBAKF,0GACE,sCAIJ,qCACE,aAGF,wBACE,aACA,uBACA,mBACA,WACA,YACA,+BACA,aACA,iDACA,eAEA,8BACE,2CAGF,kCACE,WACA,YCvEN,gBACE,YACA,cACA,kBAEA,0BACE,aACA,mBACA,kBACA,eACA,0BACA,mBACA,kBACA,qBACA,kBACA,kCACA,kBAEA,gCACE,iCAGF,mCACE,2CACA,sCACA,gBAIJ,sBACE,gBACA,uBAGF,yBACE,+BACA,iBAGF,iCACE,WACA,YACA,iBAIJ,sCACE,aACA,mBACA,WACA,kBACA,2CACA,aACA,0BACA,sCAEA,gDACE,iBAIJ,oCACE,gBAEA,mDACE,0BAGF,8CACE,+BClEF,kCACE,UACA,6BAGF,wCACE,2CACA,kBAEA,8CACE,2CAOF,8JACE,mBAKJ,sCACE,yBAIF,0CACE,sCACA,qBAIF,uCACE,yBACA,sBAGF,0CACE,cAIF,4CACE,cAUE,4KAPJ,sJACE,yBAYE,oFACE,qBAMN,oEACE,yBAIF,gDAEE,kDAGF,mHACE,uCClFJ,wBACE,iBAEA,gBAGF,mEACE,oDxBmwH4D,CwBnwH5D,wCxBmwH2G,CwBnwH3G,mGxBowH4D,CwBpwH5D,wCxBowH2G,CwBpwH3G,2FxBqwH4D,CwBrwH5D,wCxBqwH2G,CwBrwH3G,sCxBqwHuJ,CwBrwHvJ,+CAEA,+EACE","file":"styles.e40a0aa0cf3695db0c81.css","sourcesContent":["// Import all the theming functionality.\n// We can use relative imports for imports from the cdk because we bundle everything\n// up into a single flat scss file for material.\n// We want overlays to always appear over user content, so set a baseline\n// very high z-index for the overlay container, which is where we create the new\n// stacking context for all overlays.\n$cdk-z-index-overlay-container: 1000 !default;\n$cdk-z-index-overlay: 1000 !default;\n$cdk-z-index-overlay-backdrop: 1000 !default;\n\n// Background color for all of the backdrops\n$cdk-overlay-dark-backdrop-background: rgba(0, 0, 0, 0.32) !default;\n\n// Default backdrop animation is based on the Material Design swift-ease-out.\n$backdrop-animation-duration: 400ms !default;\n$backdrop-animation-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n\n\n@mixin cdk-overlay() {\n  .cdk-overlay-container, .cdk-global-overlay-wrapper {\n    // Disable events from being captured on the overlay container.\n    pointer-events: none;\n\n    // The container should be the size of the viewport.\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n  }\n\n  // The overlay-container is an invisible element which contains all individual overlays.\n  .cdk-overlay-container {\n    position: fixed;\n    z-index: $cdk-z-index-overlay-container;\n\n    &:empty {\n      // Hide the element when it doesn't have any child nodes. This doesn't\n      // include overlays that have been detached, rather than disposed.\n      display: none;\n    }\n  }\n\n  // We use an extra wrapper element in order to use make the overlay itself a flex item.\n  // This makes centering the overlay easy without running into the subpixel rendering\n  // problems tied to using `transform` and without interfering with the other position\n  // strategies.\n  .cdk-global-overlay-wrapper {\n    display: flex;\n    position: absolute;\n    z-index: $cdk-z-index-overlay;\n  }\n\n  // A single overlay pane.\n  .cdk-overlay-pane {\n    // Note: it's important for this one to start off `absolute`,\n    // in order for us to be able to measure it correctly.\n    position: absolute;\n    pointer-events: auto;\n    box-sizing: border-box;\n    z-index: $cdk-z-index-overlay;\n\n    // For connected-position overlays, we set `display: flex` in\n    // order to force `max-width` and `max-height` to take effect.\n    display: flex;\n    max-width: 100%;\n    max-height: 100%;\n  }\n\n  .cdk-overlay-backdrop {\n    // TODO(jelbourn): reuse sidenav fullscreen mixin.\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    z-index: $cdk-z-index-overlay-backdrop;\n    pointer-events: auto;\n    -webkit-tap-highlight-color: transparent;\n    transition: opacity $backdrop-animation-duration $backdrop-animation-timing-function;\n    opacity: 0;\n\n    &.cdk-overlay-backdrop-showing {\n      opacity: 1;\n\n      // In high contrast mode the rgba background will become solid so we need to fall back\n      // to making it opaque using `opacity`. Note that we can't use the `cdk-high-contrast`\n      // mixin, because we can't normalize the import path to the _a11y.scss both for the\n      // source and when this file is distributed. See #10908.\n      @media screen and (-ms-high-contrast: active) {\n        opacity: 0.6;\n      }\n    }\n  }\n\n  .cdk-overlay-dark-backdrop {\n    background: $cdk-overlay-dark-backdrop-background;\n  }\n\n  .cdk-overlay-transparent-backdrop {\n    // Note: as of Firefox 57, having the backdrop be `background: none` will prevent it from\n    // capturing the user's mouse scroll events. Since we also can't use something like\n    // `rgba(0, 0, 0, 0)`, we work around the inconsistency by not setting the background at\n    // all and using `opacity` to make the element transparent.\n    &, &.cdk-overlay-backdrop-showing {\n      opacity: 0;\n    }\n  }\n\n  // Overlay parent element used with the connected position strategy. Used to constrain the\n  // overlay element's size to fit within the viewport.\n  .cdk-overlay-connected-position-bounding-box {\n    position: absolute;\n    z-index: $cdk-z-index-overlay;\n\n    // We use `display: flex` on this element exclusively for centering connected overlays.\n    // When *not* centering, a top/left/bottom/right will be set which overrides the normal\n    // flex layout.\n    display: flex;\n\n    // We use the `column` direction here to avoid some flexbox issues in Edge\n    // when using the \"grow after open\" options.\n    flex-direction: column;\n\n    // Add some dimensions so the element has an `innerText` which some people depend on in tests.\n    min-width: 1px;\n    min-height: 1px;\n  }\n\n  // Used when disabling global scrolling.\n  .cdk-global-scrollblock {\n    position: fixed;\n\n    // Necessary for the content not to lose its width. Note that we're using 100%, instead of\n    // 100vw, because 100vw includes the width plus the scrollbar, whereas 100% is the width\n    // that the element had before we made it `fixed`.\n    width: 100%;\n\n    // Note: this will always add a scrollbar to whatever element it is on, which can\n    // potentially result in double scrollbars. It shouldn't be an issue, because we won't\n    // block scrolling on a page that doesn't have a scrollbar in the first place.\n    overflow-y: scroll;\n  }\n}\n\n@mixin cdk-a11y {\n  .cdk-visually-hidden {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n\n    // Avoid browsers rendering the focus ring in some cases.\n    outline: 0;\n\n    // Avoid some cases where the browser will still render the native controls (see #9049).\n    -webkit-appearance: none;\n    -moz-appearance: none;\n  }\n}\n\n// Applies styles for users in high contrast mode. Note that this only applies\n// to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n// attribute, however Chrome handles high contrast differently.\n//\n// @param target Which kind of high contrast setting to target. Defaults to `active`, can be\n//    `white-on-black` or `black-on-white`.\n@mixin cdk-high-contrast($target: active) {\n  @media (-ms-high-contrast: $target) {\n    @content;\n  }\n}\n\n// Core styles that enable monitoring autofill state of text fields.\n@mixin cdk-text-field {\n  // Keyframes that apply no styles, but allow us to monitor when an text field becomes autofilled\n  // by watching for the animation events that are fired when they start. Note: the /*!*/ comment is\n  // needed to prevent LibSass from stripping the keyframes out.\n  // Based on: https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n  @keyframes cdk-text-field-autofill-start {/*!*/}\n  @keyframes cdk-text-field-autofill-end {/*!*/}\n\n  .cdk-text-field-autofill-monitored:-webkit-autofill {\n    animation-name: cdk-text-field-autofill-start;\n  }\n\n  .cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\n    animation-name: cdk-text-field-autofill-end;\n  }\n\n  // Remove the resize handle on autosizing textareas, because whatever height\n  // the user resized to will be overwritten once they start typing again.\n  textarea.cdk-textarea-autosize {\n    resize: none;\n  }\n\n  // This class is temporarily applied to the textarea when it is being measured. It is immediately\n  // removed when measuring is complete. We use `!important` rules here to make sure user-specified\n  // rules do not interfere with the measurement.\n  textarea.cdk-textarea-autosize-measuring {\n    height: auto !important;\n    overflow: hidden !important;\n    // Having 2px top and bottom padding seems to fix a bug where Chrome gets an incorrect\n    // measurement. We just have to account for it later and subtract it off the final result.\n    padding: 2px 0 !important;\n    box-sizing: content-box !important;\n  }\n}\n\n// Used to generate UIDs for keyframes used to change the text field autofill styles.\n$cdk-text-field-autofill-color-frame-count: 0;\n\n// Mixin used to apply custom background and foreground colors to an autofilled text field.\n// Based on: https://stackoverflow.com/questions/2781549/\n// removing-input-background-colour-for-chrome-autocomplete#answer-37432260\n@mixin cdk-text-field-autofill-color($background, $foreground:'') {\n  @keyframes cdk-text-field-autofill-color-#{$cdk-text-field-autofill-color-frame-count} {\n    to {\n      background: $background;\n      @if $foreground != '' { color: $foreground; }\n    }\n  }\n\n  &:-webkit-autofill {\n    animation-name: cdk-text-field-autofill-color-#{$cdk-text-field-autofill-color-frame-count};\n    animation-fill-mode: both;\n  }\n\n  &.cdk-text-field-autofill-monitored:-webkit-autofill {\n    animation-name: cdk-text-field-autofill-start,\n                    cdk-text-field-autofill-color-#{$cdk-text-field-autofill-color-frame-count};\n  }\n\n  $cdk-text-field-autofill-color-frame-count:\n      $cdk-text-field-autofill-color-frame-count + 1 !global;\n}\n\n\n// Core styles that can be used to apply material design treatments to any element.\n// Media queries\n// TODO(josephperrott): Change $mat-xsmall and $mat-small usages to rely on BreakpointObserver,\n$mat-xsmall: 'max-width: 599px';\n$mat-small: 'max-width: 959px';\n\n// TODO: Revisit all z-indices before beta\n// z-index master list\n\n$z-index-fab: 20 !default;\n$z-index-drawer: 100 !default;\n\n// Global constants\n$pi: 3.14159265;\n\n// Padding between input toggles and their labels\n$mat-toggle-padding: 8px !default;\n// Width and height of input toggles\n$mat-toggle-size: 20px !default;\n\n// Easing Curves\n// TODO(jelbourn): all of these need to be revisited\n\n// The default animation curves used by material design.\n$mat-linear-out-slow-in-timing-function: cubic-bezier(0, 0, 0.2, 0.1) !default;\n$mat-fast-out-slow-in-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !default;\n$mat-fast-out-linear-in-timing-function: cubic-bezier(0.4, 0, 1, 1) !default;\n\n$ease-in-out-curve-function: cubic-bezier(0.35, 0, 0.25, 1) !default;\n\n$swift-ease-out-duration: 400ms !default;\n$swift-ease-out-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n$swift-ease-out: all $swift-ease-out-duration $swift-ease-out-timing-function !default;\n\n$swift-ease-in-duration: 300ms !default;\n$swift-ease-in-timing-function: cubic-bezier(0.55, 0, 0.55, 0.2) !default;\n$swift-ease-in: all $swift-ease-in-duration $swift-ease-in-timing-function !default;\n\n$swift-ease-in-out-duration: 500ms !default;\n$swift-ease-in-out-timing-function: $ease-in-out-curve-function !default;\n$swift-ease-in-out: all $swift-ease-in-out-duration $swift-ease-in-out-timing-function !default;\n\n$swift-linear-duration: 80ms !default;\n$swift-linear-timing-function: linear !default;\n$swift-linear: all $swift-linear-duration $swift-linear-timing-function !default;\n\n\n\n// A collection of mixins and CSS classes that can be used to apply elevation to a material\n// element.\n// See: https://material.io/design/environment/elevation.html\n// Examples:\n//\n//\n// .mat-foo {\n//   @include $mat-elevation(2);\n//\n//   &:active {\n//     @include $mat-elevation(8);\n//   }\n// }\n//\n// <div id=\"external-card\" class=\"mat-elevation-z2\"><p>Some content</p></div>\n//\n// For an explanation of the design behind how elevation is implemented, see the design doc at\n// https://goo.gl/Kq0k9Z.\n\n// Colors for umbra, penumbra, and ambient shadows. As described in the design doc, each elevation\n// level is created using a set of 3 shadow values, one for umbra (the shadow representing the\n// space completely obscured by an object relative to its light source), one for penumbra (the\n// space partially obscured by an object), and one for ambient (the space which contains the object\n// itself). For a further explanation of these terms and their meanings, see\n// https://en.wikipedia.org/wiki/Umbra,_penumbra_and_antumbra.\n\n// Maps for the different shadow sets and their values within each z-space. These values were\n// created by taking a few reference shadow sets created by Google's Designers and interpolating\n// all of the values between them.\n\n@function _get-umbra-map($color, $opacity) {\n  $shadow-color: if(type-of($color) == color, rgba($color, $opacity * 0.2), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 2px 1px -1px #{$shadow-color}',\n    2: '0px 3px 1px -2px #{$shadow-color}',\n    3: '0px 3px 3px -2px #{$shadow-color}',\n    4: '0px 2px 4px -1px #{$shadow-color}',\n    5: '0px 3px 5px -1px #{$shadow-color}',\n    6: '0px 3px 5px -1px #{$shadow-color}',\n    7: '0px 4px 5px -2px #{$shadow-color}',\n    8: '0px 5px 5px -3px #{$shadow-color}',\n    9: '0px 5px 6px -3px #{$shadow-color}',\n    10: '0px 6px 6px -3px #{$shadow-color}',\n    11: '0px 6px 7px -4px #{$shadow-color}',\n    12: '0px 7px 8px -4px #{$shadow-color}',\n    13: '0px 7px 8px -4px #{$shadow-color}',\n    14: '0px 7px 9px -4px #{$shadow-color}',\n    15: '0px 8px 9px -5px #{$shadow-color}',\n    16: '0px 8px 10px -5px #{$shadow-color}',\n    17: '0px 8px 11px -5px #{$shadow-color}',\n    18: '0px 9px 11px -5px #{$shadow-color}',\n    19: '0px 9px 12px -6px #{$shadow-color}',\n    20: '0px 10px 13px -6px #{$shadow-color}',\n    21: '0px 10px 13px -6px #{$shadow-color}',\n    22: '0px 10px 14px -6px #{$shadow-color}',\n    23: '0px 11px 14px -7px #{$shadow-color}',\n    24: '0px 11px 15px -7px #{$shadow-color}'\n  );\n}\n\n@function _get-penumbra-map($color, $opacity) {\n  $shadow-color: if(type-of($color) == color, rgba($color, $opacity * 0.14), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 1px 1px 0px #{$shadow-color}',\n    2: '0px 2px 2px 0px #{$shadow-color}',\n    3: '0px 3px 4px 0px #{$shadow-color}',\n    4: '0px 4px 5px 0px #{$shadow-color}',\n    5: '0px 5px 8px 0px #{$shadow-color}',\n    6: '0px 6px 10px 0px #{$shadow-color}',\n    7: '0px 7px 10px 1px #{$shadow-color}',\n    8: '0px 8px 10px 1px #{$shadow-color}',\n    9: '0px 9px 12px 1px #{$shadow-color}',\n    10: '0px 10px 14px 1px #{$shadow-color}',\n    11: '0px 11px 15px 1px #{$shadow-color}',\n    12: '0px 12px 17px 2px #{$shadow-color}',\n    13: '0px 13px 19px 2px #{$shadow-color}',\n    14: '0px 14px 21px 2px #{$shadow-color}',\n    15: '0px 15px 22px 2px #{$shadow-color}',\n    16: '0px 16px 24px 2px #{$shadow-color}',\n    17: '0px 17px 26px 2px #{$shadow-color}',\n    18: '0px 18px 28px 2px #{$shadow-color}',\n    19: '0px 19px 29px 2px #{$shadow-color}',\n    20: '0px 20px 31px 3px #{$shadow-color}',\n    21: '0px 21px 33px 3px #{$shadow-color}',\n    22: '0px 22px 35px 3px #{$shadow-color}',\n    23: '0px 23px 36px 3px #{$shadow-color}',\n    24: '0px 24px 38px 3px #{$shadow-color}'\n  );\n}\n\n@function _get-ambient-map($color, $opacity) {\n  $shadow-color: if(type-of($color) == color, rgba($color, $opacity * 0.12), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 1px 3px 0px #{$shadow-color}',\n    2: '0px 1px 5px 0px #{$shadow-color}',\n    3: '0px 1px 8px 0px #{$shadow-color}',\n    4: '0px 1px 10px 0px #{$shadow-color}',\n    5: '0px 1px 14px 0px #{$shadow-color}',\n    6: '0px 1px 18px 0px #{$shadow-color}',\n    7: '0px 2px 16px 1px #{$shadow-color}',\n    8: '0px 3px 14px 2px #{$shadow-color}',\n    9: '0px 3px 16px 2px #{$shadow-color}',\n    10: '0px 4px 18px 3px #{$shadow-color}',\n    11: '0px 4px 20px 3px #{$shadow-color}',\n    12: '0px 5px 22px 4px #{$shadow-color}',\n    13: '0px 5px 24px 4px #{$shadow-color}',\n    14: '0px 5px 26px 4px #{$shadow-color}',\n    15: '0px 6px 28px 5px #{$shadow-color}',\n    16: '0px 6px 30px 5px #{$shadow-color}',\n    17: '0px 6px 32px 5px #{$shadow-color}',\n    18: '0px 7px 34px 6px #{$shadow-color}',\n    19: '0px 7px 36px 6px #{$shadow-color}',\n    20: '0px 8px 38px 7px #{$shadow-color}',\n    21: '0px 8px 40px 7px #{$shadow-color}',\n    22: '0px 8px 42px 7px #{$shadow-color}',\n    23: '0px 9px 44px 8px #{$shadow-color}',\n    24: '0px 9px 46px 8px #{$shadow-color}'\n  );\n}\n\n// The default duration value for elevation transitions.\n$mat-elevation-transition-duration: 280ms !default;\n\n// The default easing value for elevation transitions.\n$mat-elevation-transition-timing-function: $mat-fast-out-slow-in-timing-function;\n\n// The default color for elevation shadows.\n$mat-elevation-color: black !default;\n\n// The default opacity scaling value for elevation shadows.\n$mat-elevation-opacity: 1 !default;\n\n// Prefix for elevation-related selectors.\n$_mat-elevation-prefix: 'mat-elevation-z';\n\n// Applies the correct css rules to an element to give it the elevation specified by $zValue.\n// The $zValue must be between 0 and 24.\n@mixin mat-elevation($zValue, $color: $mat-elevation-color, $opacity: $mat-elevation-opacity) {\n  @if type-of($zValue) != number or not unitless($zValue) {\n    @error '$zValue must be a unitless number';\n  }\n  @if $zValue < 0 or $zValue > 24 {\n    @error '$zValue must be between 0 and 24';\n  }\n\n  box-shadow: #{map-get(_get-umbra-map($color, $opacity), $zValue)},\n              #{map-get(_get-penumbra-map($color, $opacity), $zValue)},\n              #{map-get(_get-ambient-map($color, $opacity), $zValue)};\n}\n\n@mixin _mat-theme-elevation($zValue, $theme, $opacity: $mat-elevation-opacity) {\n  $foreground: map-get($theme, foreground);\n  $elevation-color: map-get($foreground, elevation);\n  $elevation-color-or-default: if($elevation-color == null, $mat-elevation-color, $elevation-color);\n\n  @include mat-elevation($zValue, $elevation-color-or-default, $opacity);\n}\n\n// Applies the elevation to an element in a manner that allows\n// consumers to override it via the Material elevation classes.\n@mixin mat-overridable-elevation(\n    $zValue,\n    $color: $mat-elevation-color,\n    $opacity: $mat-elevation-opacity) {\n  &:not([class*='#{$_mat-elevation-prefix}']) {\n    @include mat-elevation($zValue, $color, $opacity);\n  }\n}\n\n@mixin _mat-theme-overridable-elevation($zValue, $theme, $opacity: $mat-elevation-opacity) {\n  $foreground: map-get($theme, foreground);\n  $elevation-color: map-get($foreground, elevation);\n  $elevation-color-or-default: if($elevation-color == null, $mat-elevation-color, $elevation-color);\n\n  @include mat-overridable-elevation($zValue, $elevation-color-or-default, $opacity);\n}\n\n// Returns a string that can be used as the value for a transition property for elevation.\n// Calling this function directly is useful in situations where a component needs to transition\n// more than one property.\n//\n// .foo {\n//   transition: mat-elevation-transition-property-value(), opacity 100ms ease;\n// }\n@function mat-elevation-transition-property-value(\n    $duration: $mat-elevation-transition-duration,\n    $easing: $mat-elevation-transition-timing-function) {\n  @return box-shadow #{$duration} #{$easing};\n}\n\n// Applies the correct css rules needed to have an element transition between elevations.\n// This mixin should be applied to elements whose elevation values will change depending on their\n// context (e.g. when active or disabled).\n//\n// NOTE(traviskaufman): Both this mixin and the above function use default parameters so they can\n// be used in the same way by clients.\n@mixin mat-elevation-transition(\n    $duration: $mat-elevation-transition-duration,\n    $easing: $mat-elevation-transition-timing-function) {\n  transition: mat-elevation-transition-property-value($duration, $easing);\n}\n\n// Color palettes from the Material Design spec.\n// See https://material.io/design/color/\n//\n// Contrast colors are hard-coded because it is too difficult (probably impossible) to\n// calculate them. These contrast colors are pulled from the public Material Design spec swatches.\n// While the contrast colors in the spec are not prescriptive, we use them for convenience.\n\n\n// @deprecated renamed to $dark-primary-text.\n// @breaking-change 8.0.0\n$black-87-opacity: rgba(black, 0.87);\n// @deprecated renamed to $light-primary-text.\n// @breaking-change 8.0.0\n$white-87-opacity: rgba(white, 0.87);\n// @deprecated use $dark-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$black-12-opacity: rgba(black, 0.12);\n// @deprecated use $light-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$white-12-opacity: rgba(white, 0.12);\n// @deprecated use $dark-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$black-6-opacity: rgba(black, 0.06);\n// @deprecated use $light-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$white-6-opacity: rgba(white, 0.06);\n\n$dark-primary-text: rgba(black, 0.87);\n$dark-secondary-text: rgba(black, 0.54);\n$dark-disabled-text: rgba(black, 0.38);\n$dark-dividers: rgba(black, 0.12);\n$dark-focused: rgba(black, 0.12);\n$light-primary-text: white;\n$light-secondary-text: rgba(white, 0.7);\n$light-disabled-text: rgba(white, 0.5);\n$light-dividers: rgba(white, 0.12);\n$light-focused: rgba(white, 0.12);\n\n$mat-red: (\n  50: #ffebee,\n  100: #ffcdd2,\n  200: #ef9a9a,\n  300: #e57373,\n  400: #ef5350,\n  500: #f44336,\n  600: #e53935,\n  700: #d32f2f,\n  800: #c62828,\n  900: #b71c1c,\n  A100: #ff8a80,\n  A200: #ff5252,\n  A400: #ff1744,\n  A700: #d50000,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-pink: (\n  50: #fce4ec,\n  100: #f8bbd0,\n  200: #f48fb1,\n  300: #f06292,\n  400: #ec407a,\n  500: #e91e63,\n  600: #d81b60,\n  700: #c2185b,\n  800: #ad1457,\n  900: #880e4f,\n  A100: #ff80ab,\n  A200: #ff4081,\n  A400: #f50057,\n  A700: #c51162,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-purple: (\n  50: #f3e5f5,\n  100: #e1bee7,\n  200: #ce93d8,\n  300: #ba68c8,\n  400: #ab47bc,\n  500: #9c27b0,\n  600: #8e24aa,\n  700: #7b1fa2,\n  800: #6a1b9a,\n  900: #4a148c,\n  A100: #ea80fc,\n  A200: #e040fb,\n  A400: #d500f9,\n  A700: #aa00ff,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-deep-purple: (\n  50: #ede7f6,\n  100: #d1c4e9,\n  200: #b39ddb,\n  300: #9575cd,\n  400: #7e57c2,\n  500: #673ab7,\n  600: #5e35b1,\n  700: #512da8,\n  800: #4527a0,\n  900: #311b92,\n  A100: #b388ff,\n  A200: #7c4dff,\n  A400: #651fff,\n  A700: #6200ea,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-indigo: (\n  50: #e8eaf6,\n  100: #c5cae9,\n  200: #9fa8da,\n  300: #7986cb,\n  400: #5c6bc0,\n  500: #3f51b5,\n  600: #3949ab,\n  700: #303f9f,\n  800: #283593,\n  900: #1a237e,\n  A100: #8c9eff,\n  A200: #536dfe,\n  A400: #3d5afe,\n  A700: #304ffe,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-blue: (\n  50: #e3f2fd,\n  100: #bbdefb,\n  200: #90caf9,\n  300: #64b5f6,\n  400: #42a5f5,\n  500: #2196f3,\n  600: #1e88e5,\n  700: #1976d2,\n  800: #1565c0,\n  900: #0d47a1,\n  A100: #82b1ff,\n  A200: #448aff,\n  A400: #2979ff,\n  A700: #2962ff,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-light-blue: (\n  50: #e1f5fe,\n  100: #b3e5fc,\n  200: #81d4fa,\n  300: #4fc3f7,\n  400: #29b6f6,\n  500: #03a9f4,\n  600: #039be5,\n  700: #0288d1,\n  800: #0277bd,\n  900: #01579b,\n  A100: #80d8ff,\n  A200: #40c4ff,\n  A400: #00b0ff,\n  A700: #0091ea,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-cyan: (\n  50: #e0f7fa,\n  100: #b2ebf2,\n  200: #80deea,\n  300: #4dd0e1,\n  400: #26c6da,\n  500: #00bcd4,\n  600: #00acc1,\n  700: #0097a7,\n  800: #00838f,\n  900: #006064,\n  A100: #84ffff,\n  A200: #18ffff,\n  A400: #00e5ff,\n  A700: #00b8d4,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-teal: (\n  50: #e0f2f1,\n  100: #b2dfdb,\n  200: #80cbc4,\n  300: #4db6ac,\n  400: #26a69a,\n  500: #009688,\n  600: #00897b,\n  700: #00796b,\n  800: #00695c,\n  900: #004d40,\n  A100: #a7ffeb,\n  A200: #64ffda,\n  A400: #1de9b6,\n  A700: #00bfa5,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-green: (\n  50: #e8f5e9,\n  100: #c8e6c9,\n  200: #a5d6a7,\n  300: #81c784,\n  400: #66bb6a,\n  500: #4caf50,\n  600: #43a047,\n  700: #388e3c,\n  800: #2e7d32,\n  900: #1b5e20,\n  A100: #b9f6ca,\n  A200: #69f0ae,\n  A400: #00e676,\n  A700: #00c853,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-light-green: (\n  50: #f1f8e9,\n  100: #dcedc8,\n  200: #c5e1a5,\n  300: #aed581,\n  400: #9ccc65,\n  500: #8bc34a,\n  600: #7cb342,\n  700: #689f38,\n  800: #558b2f,\n  900: #33691e,\n  A100: #ccff90,\n  A200: #b2ff59,\n  A400: #76ff03,\n  A700: #64dd17,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-lime: (\n  50: #f9fbe7,\n  100: #f0f4c3,\n  200: #e6ee9c,\n  300: #dce775,\n  400: #d4e157,\n  500: #cddc39,\n  600: #c0ca33,\n  700: #afb42b,\n  800: #9e9d24,\n  900: #827717,\n  A100: #f4ff81,\n  A200: #eeff41,\n  A400: #c6ff00,\n  A700: #aeea00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-yellow: (\n  50: #fffde7,\n  100: #fff9c4,\n  200: #fff59d,\n  300: #fff176,\n  400: #ffee58,\n  500: #ffeb3b,\n  600: #fdd835,\n  700: #fbc02d,\n  800: #f9a825,\n  900: #f57f17,\n  A100: #ffff8d,\n  A200: #ffff00,\n  A400: #ffea00,\n  A700: #ffd600,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $dark-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-amber: (\n  50: #fff8e1,\n  100: #ffecb3,\n  200: #ffe082,\n  300: #ffd54f,\n  400: #ffca28,\n  500: #ffc107,\n  600: #ffb300,\n  700: #ffa000,\n  800: #ff8f00,\n  900: #ff6f00,\n  A100: #ffe57f,\n  A200: #ffd740,\n  A400: #ffc400,\n  A700: #ffab00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $dark-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-orange: (\n  50: #fff3e0,\n  100: #ffe0b2,\n  200: #ffcc80,\n  300: #ffb74d,\n  400: #ffa726,\n  500: #ff9800,\n  600: #fb8c00,\n  700: #f57c00,\n  800: #ef6c00,\n  900: #e65100,\n  A100: #ffd180,\n  A200: #ffab40,\n  A400: #ff9100,\n  A700: #ff6d00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: black,\n  )\n);\n\n$mat-deep-orange: (\n  50: #fbe9e7,\n  100: #ffccbc,\n  200: #ffab91,\n  300: #ff8a65,\n  400: #ff7043,\n  500: #ff5722,\n  600: #f4511e,\n  700: #e64a19,\n  800: #d84315,\n  900: #bf360c,\n  A100: #ff9e80,\n  A200: #ff6e40,\n  A400: #ff3d00,\n  A700: #dd2c00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-brown: (\n  50: #efebe9,\n  100: #d7ccc8,\n  200: #bcaaa4,\n  300: #a1887f,\n  400: #8d6e63,\n  500: #795548,\n  600: #6d4c41,\n  700: #5d4037,\n  800: #4e342e,\n  900: #3e2723,\n  A100: #d7ccc8,\n  A200: #bcaaa4,\n  A400: #8d6e63,\n  A700: #5d4037,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-grey: (\n  50: #fafafa,\n  100: #f5f5f5,\n  200: #eeeeee,\n  300: #e0e0e0,\n  400: #bdbdbd,\n  500: #9e9e9e,\n  600: #757575,\n  700: #616161,\n  800: #424242,\n  900: #212121,\n  A100: #ffffff,\n  A200: #eeeeee,\n  A400: #bdbdbd,\n  A700: #616161,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n// Alias for alternate spelling.\n$mat-gray: $mat-grey;\n\n$mat-blue-grey: (\n  50: #eceff1,\n  100: #cfd8dc,\n  200: #b0bec5,\n  300: #90a4ae,\n  400: #78909c,\n  500: #607d8b,\n  600: #546e7a,\n  700: #455a64,\n  800: #37474f,\n  900: #263238,\n  A100: #cfd8dc,\n  A200: #b0bec5,\n  A400: #78909c,\n  A700: #455a64,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n// Alias for alternate spelling.\n$mat-blue-gray: $mat-blue-grey;\n\n\n// Background palette for light themes.\n$mat-light-theme-background: (\n  status-bar: map_get($mat-grey, 300),\n  app-bar:    map_get($mat-grey, 100),\n  background: map_get($mat-grey, 50),\n  hover:      rgba(black, 0.04), // TODO(kara): check style with Material Design UX\n  card:       white,\n  dialog:     white,\n  disabled-button: rgba(black, 0.12),\n  raised-button: white,\n  focused-button: $dark-focused,\n  selected-button: map_get($mat-grey, 300),\n  selected-disabled-button: map_get($mat-grey, 400),\n  disabled-button-toggle: map_get($mat-grey, 200),\n  unselected-chip: map_get($mat-grey, 300),\n  disabled-list-option: map_get($mat-grey, 200),\n);\n\n// Background palette for dark themes.\n$mat-dark-theme-background: (\n  status-bar: black,\n  app-bar:    map_get($mat-grey, 900),\n  background: #303030,\n  hover:      rgba(white, 0.04), // TODO(kara): check style with Material Design UX\n  card:       map_get($mat-grey, 800),\n  dialog:     map_get($mat-grey, 800),\n  disabled-button: rgba(white, 0.12),\n  raised-button: map-get($mat-grey, 800),\n  focused-button: $light-focused,\n  selected-button: map_get($mat-grey, 900),\n  selected-disabled-button: map_get($mat-grey, 800),\n  disabled-button-toggle: black,\n  unselected-chip: map_get($mat-grey, 700),\n  disabled-list-option: black,\n);\n\n// Foreground palette for light themes.\n$mat-light-theme-foreground: (\n  base:              black,\n  divider:           $dark-dividers,\n  dividers:          $dark-dividers,\n  disabled:          $dark-disabled-text,\n  disabled-button:   rgba(black, 0.26),\n  disabled-text:     $dark-disabled-text,\n  elevation:         black,\n  hint-text:         $dark-disabled-text,\n  secondary-text:    $dark-secondary-text,\n  icon:              rgba(black, 0.54),\n  icons:             rgba(black, 0.54),\n  text:              rgba(black, 0.87),\n  slider-min:        rgba(black, 0.87),\n  slider-off:        rgba(black, 0.26),\n  slider-off-active: rgba(black, 0.38),\n);\n\n// Foreground palette for dark themes.\n$mat-dark-theme-foreground: (\n  base:              white,\n  divider:           $light-dividers,\n  dividers:          $light-dividers,\n  disabled:          $light-disabled-text,\n  disabled-button:   rgba(white, 0.3),\n  disabled-text:     $light-disabled-text,\n  elevation:         black,\n  hint-text:         $light-disabled-text,\n  secondary-text:    $light-secondary-text,\n  icon:              white,\n  icons:             white,\n  text:              white,\n  slider-min:        white,\n  slider-off:        rgba(white, 0.3),\n  slider-off-active: rgba(white, 0.3),\n);\n\n\n\n// For a given hue in a palette, return the contrast color from the map of contrast palettes.\n// @param $color-map\n// @param $hue\n@function mat-contrast($palette, $hue) {\n  @return map-get(map-get($palette, contrast), $hue);\n}\n\n\n// Creates a map of hues to colors for a theme. This is used to define a theme palette in terms\n// of the Material Design hues.\n// @param $color-map\n// @param $primary\n// @param $lighter\n@function mat-palette($base-palette, $default: 500, $lighter: 100, $darker: 700, $text: $default) {\n  $result: map_merge($base-palette, (\n    default: map-get($base-palette, $default),\n    lighter: map-get($base-palette, $lighter),\n    darker: map-get($base-palette, $darker),\n    text: map-get($base-palette, $text),\n\n    default-contrast: mat-contrast($base-palette, $default),\n    lighter-contrast: mat-contrast($base-palette, $lighter),\n    darker-contrast: mat-contrast($base-palette, $darker)\n  ));\n\n  // For each hue in the palette, add a \"-contrast\" color to the map.\n  @each $hue, $color in $base-palette {\n    $result: map_merge($result, (\n      '#{$hue}-contrast': mat-contrast($base-palette, $hue)\n    ));\n  }\n\n  @return $result;\n}\n\n\n// Gets a color from a theme palette (the output of mat-palette).\n// The hue can be one of the standard values (500, A400, etc.), one of the three preconfigured\n// hues (default, lighter, darker), or any of the aforementioned prefixed with \"-contrast\".\n//\n// @param $color-map The theme palette (output of mat-palette).\n// @param $hue The hue from the palette to use. If this is a value between 0 and 1, it will\n//     be treated as opacity.\n// @param $opacity The alpha channel value for the color.\n@function mat-color($palette, $hue: default, $opacity: null) {\n  // If hueKey is a number between zero and one, then it actually contains an\n  // opacity value, so recall this function with the default hue and that given opacity.\n  @if type-of($hue) == number and $hue >= 0 and $hue <= 1 {\n    @return mat-color($palette, default, $hue);\n  }\n\n  $color: map-get($palette, $hue);\n\n  @if (type-of($color) != color) {\n    // If the $color resolved to something different from a color (e.g. a CSS variable),\n    // we can't apply the opacity anyway so we return the value as is, otherwise Sass can\n    // throw an error or output something invalid.\n    @return $color;\n  }\n\n  @return rgba($color, if($opacity == null, opacity($color), $opacity));\n}\n\n\n// Creates a container object for a light theme to be given to individual component theme mixins.\n@function mat-light-theme($primary, $accent, $warn: mat-palette($mat-red)) {\n  @return (\n    primary: $primary,\n    accent: $accent,\n    warn: $warn,\n    is-dark: false,\n    foreground: $mat-light-theme-foreground,\n    background: $mat-light-theme-background,\n  );\n}\n\n\n// Creates a container object for a dark theme to be given to individual component theme mixins.\n@function mat-dark-theme($primary, $accent, $warn: mat-palette($mat-red)) {\n  @return (\n    primary: $primary,\n    accent: $accent,\n    warn: $warn,\n    is-dark: true,\n    foreground: $mat-dark-theme-foreground,\n    background: $mat-dark-theme-background,\n  );\n}\n\n\n\n$mat-ripple-color-opacity: 0.1;\n\n@mixin mat-ripple() {\n\n  // The host element of an mat-ripple directive should always have a position of \"absolute\" or\n  // \"relative\" so that the ripples inside are correctly positioned relatively to the container.\n  .mat-ripple {\n    overflow: hidden;\n\n    // By default, every ripple container should have position: relative in favor of creating an\n    // easy API for developers using the MatRipple directive.\n    position: relative;\n  }\n\n  .mat-ripple.mat-ripple-unbounded {\n    overflow: visible;\n  }\n\n  .mat-ripple-element {\n    position: absolute;\n    border-radius: 50%;\n    pointer-events: none;\n\n    transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n    transform: scale(0);\n\n    // In high contrast mode the ripple is opaque, causing it to obstruct the content.\n    @include cdk-high-contrast {\n      display: none;\n    }\n  }\n}\n\n/* Theme for the ripple elements.*/\n@mixin mat-ripple-theme($theme) {\n  $foreground: map_get($theme, foreground);\n  $foreground-base: map_get($foreground, base);\n\n  .mat-ripple-element {\n    // If the ripple color is resolves to a color *type*, we can use it directly, otherwise\n    // (e.g. it resolves to a CSS variable) we fall back to using the color and setting an opacity.\n    @if (type-of($foreground-base) == color) {\n      background-color: rgba($foreground-base, $mat-ripple-color-opacity);\n    }\n    @else {\n      background-color: $foreground-base;\n      opacity: $mat-ripple-color-opacity;\n    }\n  }\n}\n\n\n\n// Utility for fetching a nested value from a typography config.\n@function _mat-get-type-value($config, $level, $name) {\n  @return map-get(map-get($config, $level), $name);\n}\n\n// Gets the font size for a level inside a typography config.\n@function mat-font-size($config, $level) {\n  @return _mat-get-type-value($config, $level, font-size);\n}\n\n// Gets the line height for a level inside a typography config.\n@function mat-line-height($config, $level) {\n  @return _mat-get-type-value($config, $level, line-height);\n}\n\n// Gets the font weight for a level inside a typography config.\n@function mat-font-weight($config, $level) {\n  @return _mat-get-type-value($config, $level, font-weight);\n}\n\n// Gets the letter spacing for a level inside a typography config.\n@function mat-letter-spacing($config, $level) {\n  @return _mat-get-type-value($config, $level, letter-spacing);\n}\n\n// Gets the font-family from a typography config and removes the quotes around it.\n@function mat-font-family($config, $level: null) {\n  $font-family: map-get($config, font-family);\n\n  @if $level != null {\n    $font-family: _mat-get-type-value($config, $level, font-family);\n  }\n\n  // Guard against unquoting non-string values, because it's deprecated.\n  @return if(type-of($font-family) == string, unquote($font-family), $font-family);\n}\n\n// Outputs the shorthand `font` CSS property, based on a set of typography values. Falls back to\n// the individual properties if a value that isn't allowed in the shorthand is passed in.\n@mixin mat-typography-font-shorthand($font-size, $font-weight, $line-height, $font-family) {\n  // If any of the values are set to `inherit`, we can't use the shorthand\n  // so we fall back to passing in the individual properties.\n  @if ($font-size == inherit or\n       $font-weight == inherit or\n       $line-height == inherit or\n       $font-family == inherit or\n       $font-size == null or\n       $font-weight == null or\n       $line-height == null or\n       $font-family == null) {\n\n    font-size: $font-size;\n    font-weight: $font-weight;\n    line-height: $line-height;\n    font-family: $font-family;\n  }\n  @else {\n    // Otherwise use the shorthand `font`, because it's the least amount of bytes. Note\n    // that we need to use interpolation for `font-size/line-height` in order to prevent\n    // Sass from dividing the two values.\n    font: $font-weight #{$font-size}/#{$line-height} $font-family;\n  }\n}\n\n// Converts a typography level into CSS styles.\n@mixin mat-typography-level-to-styles($config, $level) {\n  $font-size: mat-font-size($config, $level);\n  $font-weight: mat-font-weight($config, $level);\n  $line-height: mat-line-height($config, $level);\n  $font-family: mat-font-family($config, $level);\n\n  @include mat-typography-font-shorthand($font-size, $font-weight, $line-height, $font-family);\n  letter-spacing: mat-letter-spacing($config, $level);\n}\n\n\n@mixin mat-option-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  .mat-option {\n    color: mat-color($foreground, text);\n\n    &:hover:not(.mat-option-disabled),\n    &:focus:not(.mat-option-disabled) {\n      background: mat-color($background, hover);\n    }\n\n    // In multiple mode there is a checkbox to show that the option is selected.\n    &.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled) {\n      background: mat-color($background, hover);\n    }\n\n    &.mat-active {\n      background: mat-color($background, hover);\n      color: mat-color($foreground, text);\n    }\n\n    &.mat-option-disabled {\n      color: mat-color($foreground, hint-text);\n    }\n  }\n\n  .mat-primary .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: mat-color($primary, text);\n  }\n\n  .mat-accent .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: mat-color($accent, text);\n  }\n\n  .mat-warn .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: mat-color($warn, text);\n  }\n}\n\n@mixin mat-option-typography($config) {\n  .mat-option {\n    font: {\n      family: mat-font-family($config);\n      size: mat-font-size($config, subheading-2);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-optgroup-theme($theme) {\n  $foreground: map-get($theme, foreground);\n\n  .mat-optgroup-label {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-optgroup-disabled .mat-optgroup-label {\n    color: mat-color($foreground, hint-text);\n  }\n}\n\n@mixin mat-optgroup-typography($config) {\n  .mat-optgroup-label {\n    @include mat-typography-level-to-styles($config, body-2);\n  }\n}\n\n\n\n@mixin mat-pseudo-checkbox-theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n  $colored-box-selector: '.mat-pseudo-checkbox-checked, .mat-pseudo-checkbox-indeterminate';\n\n  .mat-pseudo-checkbox {\n    color: mat-color(map-get($theme, foreground), secondary-text);\n\n    &::after {\n      color: mat-color($background, background);\n    }\n  }\n\n  .mat-pseudo-checkbox-disabled {\n    color: $disabled-color;\n  }\n\n  // Default to the accent color. Note that the pseudo checkboxes are meant to inherit the\n  // theme from their parent, rather than implementing their own theming, which is why we\n  // don't attach to the `mat-*` classes.\n  .mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-indeterminate,\n  .mat-accent .mat-pseudo-checkbox-checked,\n  .mat-accent .mat-pseudo-checkbox-indeterminate {\n    background: mat-color(map-get($theme, accent));\n  }\n\n  .mat-primary .mat-pseudo-checkbox-checked,\n  .mat-primary .mat-pseudo-checkbox-indeterminate {\n    background: mat-color(map-get($theme, primary));\n  }\n\n  .mat-warn .mat-pseudo-checkbox-checked,\n  .mat-warn .mat-pseudo-checkbox-indeterminate {\n    background: mat-color(map-get($theme, warn));\n  }\n\n  .mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-indeterminate {\n    &.mat-pseudo-checkbox-disabled {\n      background: $disabled-color;\n    }\n  }\n}\n\n\n\n// Represents a typography level from the Material design spec.\n@function mat-typography-level(\n  $font-size,\n  $line-height: $font-size,\n  $font-weight: 400,\n  $font-family: null,\n  $letter-spacing: null) {\n\n  @return (\n    font-size: $font-size,\n    line-height: $line-height,\n    font-weight: $font-weight,\n    font-family: $font-family,\n    letter-spacing: $letter-spacing\n  );\n}\n\n// Represents a collection of typography levels.\n// Defaults come from https://material.io/guidelines/style/typography.html\n// Note: The spec doesn't mention letter spacing. The values here come from\n// eyeballing it until it looked exactly like the spec examples.\n@function mat-typography-config(\n  $font-family:   'Roboto, \"Helvetica Neue\", sans-serif',\n  $display-4:     mat-typography-level(112px, 112px, 300, $letter-spacing: -0.05em),\n  $display-3:     mat-typography-level(56px, 56px, 400, $letter-spacing: -0.02em),\n  $display-2:     mat-typography-level(45px, 48px, 400, $letter-spacing: -0.005em),\n  $display-1:     mat-typography-level(34px, 40px, 400),\n  $headline:      mat-typography-level(24px, 32px, 400),\n  $title:         mat-typography-level(20px, 32px, 500),\n  $subheading-2:  mat-typography-level(16px, 28px, 400),\n  $subheading-1:  mat-typography-level(15px, 24px, 400),\n  $body-2:        mat-typography-level(14px, 24px, 500),\n  $body-1:        mat-typography-level(14px, 20px, 400),\n  $caption:       mat-typography-level(12px, 20px, 400),\n  $button:        mat-typography-level(14px, 14px, 500),\n  // Line-height must be unit-less fraction of the font-size.\n  $input:         mat-typography-level(inherit, 1.125, 400)\n) {\n\n  // Declare an initial map with all of the levels.\n  $config: (\n    display-4:      $display-4,\n    display-3:      $display-3,\n    display-2:      $display-2,\n    display-1:      $display-1,\n    headline:       $headline,\n    title:          $title,\n    subheading-2:   $subheading-2,\n    subheading-1:   $subheading-1,\n    body-2:         $body-2,\n    body-1:         $body-1,\n    caption:        $caption,\n    button:         $button,\n    input:          $input,\n  );\n\n  // Loop through the levels and set the `font-family` of the ones that don't have one to the base.\n  // Note that Sass can't modify maps in place, which means that we need to merge and re-assign.\n  @each $key, $level in $config {\n    @if map-get($level, font-family) == null {\n      $new-level: map-merge($level, (font-family: $font-family));\n      $config: map-merge($config, ($key: $new-level));\n    }\n  }\n\n  // Add the base font family to the config.\n  @return map-merge($config, (font-family: $font-family));\n}\n\n// Adds the base typography styles, based on a config.\n@mixin mat-base-typography($config, $selector: '.mat-typography') {\n  .mat-h1, .mat-headline, #{$selector} h1 {\n    @include mat-typography-level-to-styles($config, headline);\n    margin: 0 0 16px;\n  }\n\n  .mat-h2, .mat-title, #{$selector} h2 {\n    @include mat-typography-level-to-styles($config, title);\n    margin: 0 0 16px;\n  }\n\n  .mat-h3, .mat-subheading-2, #{$selector} h3 {\n    @include mat-typography-level-to-styles($config, subheading-2);\n    margin: 0 0 16px;\n  }\n\n  .mat-h4, .mat-subheading-1, #{$selector} h4 {\n    @include mat-typography-level-to-styles($config, subheading-1);\n    margin: 0 0 16px;\n  }\n\n  // Note: the spec doesn't have anything that would correspond to h5 and h6, but we add these for\n  // consistency. The font sizes come from the Chrome user agent styles which have h5 at 0.83em\n  // and h6 at 0.67em.\n  .mat-h5, #{$selector} h5 {\n    @include mat-typography-font-shorthand(\n       // calc is used here to support css variables\n      calc(#{mat-font-size($config, body-1)} * 0.83),\n      mat-font-weight($config, body-1),\n      mat-line-height($config, body-1),\n      mat-font-family($config, body-1)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-h6, #{$selector} h6 {\n    @include mat-typography-font-shorthand(\n       // calc is used here to support css variables\n      calc(#{mat-font-size($config, body-1)} * 0.67),\n      mat-font-weight($config, body-1),\n      mat-line-height($config, body-1),\n      mat-font-family($config, body-1)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-body-strong, .mat-body-2 {\n    @include mat-typography-level-to-styles($config, body-2);\n  }\n\n  .mat-body, .mat-body-1, #{$selector} {\n    @include mat-typography-level-to-styles($config, body-1);\n\n    p {\n      margin: 0 0 12px;\n    }\n  }\n\n  .mat-small, .mat-caption {\n    @include mat-typography-level-to-styles($config, caption);\n  }\n\n  .mat-display-4, #{$selector} .mat-display-4 {\n    @include mat-typography-level-to-styles($config, display-4);\n    margin: 0 0 56px;\n  }\n\n  .mat-display-3, #{$selector} .mat-display-3 {\n    @include mat-typography-level-to-styles($config, display-3);\n    margin: 0 0 64px;\n  }\n\n  .mat-display-2, #{$selector} .mat-display-2 {\n    @include mat-typography-level-to-styles($config, display-2);\n    margin: 0 0 64px;\n  }\n\n  .mat-display-1, #{$selector} .mat-display-1 {\n    @include mat-typography-level-to-styles($config, display-1);\n    margin: 0 0 64px;\n  }\n}\n\n\n\n\n@mixin mat-autocomplete-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n\n  .mat-autocomplete-panel {\n    @include _mat-theme-overridable-elevation(4, $theme);\n    background: mat-color($background, card);\n    color: mat-color($foreground, text);\n\n    // Selected options in autocompletes should not be gray, but we\n    // only want to override the background for selected options if\n    // they are *not* in hover or focus state. This change has to be\n    // made here because base option styles are shared between the\n    // autocomplete and the select.\n    .mat-option.mat-selected:not(.mat-active):not(:hover) {\n      background: mat-color($background, card);\n\n      &:not(.mat-option-disabled) {\n        color: mat-color($foreground, text);\n      }\n    }\n  }\n\n}\n\n@mixin mat-autocomplete-typography($config) { }\n\n// This contains all of the styles for the badge\n// rather than just the color/theme because of\n// no style sheet support for directives.\n\n\n\n\n\n$mat-badge-font-size: 12px;\n$mat-badge-font-weight: 600;\n$mat-badge-default-size: 22px !default;\n$mat-badge-small-size: $mat-badge-default-size - 6;\n$mat-badge-large-size: $mat-badge-default-size + 6;\n\n// Mixin for building offset given different sizes\n@mixin _mat-badge-size($size) {\n  .mat-badge-content {\n    width: $size;\n    height: $size;\n    line-height: $size;\n  }\n\n  &.mat-badge-above {\n    .mat-badge-content {\n      top: -$size / 2;\n    }\n  }\n\n  &.mat-badge-below {\n    .mat-badge-content {\n      bottom: -$size / 2;\n    }\n  }\n\n  &.mat-badge-before {\n    .mat-badge-content {\n      left: -$size;\n    }\n  }\n\n  [dir='rtl'] &.mat-badge-before {\n    .mat-badge-content {\n      left: auto;\n      right: -$size;\n    }\n  }\n\n  &.mat-badge-after {\n    .mat-badge-content {\n      right: -$size;\n    }\n  }\n\n  [dir='rtl'] &.mat-badge-after {\n    .mat-badge-content {\n      right: auto;\n      left: -$size;\n    }\n  }\n\n  &.mat-badge-overlap {\n    &.mat-badge-before {\n      .mat-badge-content {\n        left: -$size / 2;\n      }\n    }\n\n    [dir='rtl'] &.mat-badge-before {\n      .mat-badge-content {\n        left: auto;\n        right: -$size / 2;\n      }\n    }\n\n    &.mat-badge-after {\n      .mat-badge-content {\n        right: -$size / 2;\n      }\n    }\n\n    [dir='rtl'] &.mat-badge-after {\n      .mat-badge-content {\n        right: auto;\n        left: -$size / 2;\n      }\n    }\n  }\n}\n\n@mixin mat-badge-theme($theme) {\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $primary: map-get($theme, primary);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-badge-content {\n    color: mat-color($primary, default-contrast);\n    background: mat-color($primary);\n\n    @include cdk-high-contrast {\n      outline: solid 1px;\n      border-radius: 0;\n    }\n  }\n\n  .mat-badge-accent {\n    .mat-badge-content {\n      background: mat-color($accent);\n      color: mat-color($accent, default-contrast);\n    }\n  }\n\n  .mat-badge-warn {\n    .mat-badge-content {\n      color: mat-color($warn, default-contrast);\n      background: mat-color($warn);\n    }\n  }\n\n  .mat-badge {\n    position: relative;\n  }\n\n  .mat-badge-hidden {\n    .mat-badge-content {\n      display: none;\n    }\n  }\n\n  .mat-badge-disabled {\n    .mat-badge-content {\n      $app-background: mat-color($background, 'background');\n      $badge-color: mat-color($foreground, disabled-button);\n\n      // The disabled color usually has some kind of opacity, but because the badge is overlayed\n      // on top of something else, it won't look good if it's opaque. If it is a color *type*,\n      // we convert it into a solid color by taking the opacity from the rgba value and using\n      // the value to determine the percentage of the background to put into foreground when\n      // mixing the colors together.\n      @if (type-of($badge-color) == color and type-of($app-background) == color) {\n        $badge-opacity: opacity($badge-color);\n        background: mix($app-background, rgba($badge-color, 1), (1 - $badge-opacity) * 100%);\n      }\n      @else {\n        background: $badge-color;\n      }\n\n      color: mat-color($foreground, disabled-text);\n    }\n  }\n\n  .mat-badge-content {\n    position: absolute;\n    text-align: center;\n    display: inline-block;\n    border-radius: 50%;\n    transition: transform 200ms ease-in-out;\n    transform: scale(0.6);\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    pointer-events: none;\n  }\n\n  .ng-animate-disabled .mat-badge-content,\n  .mat-badge-content._mat-animation-noopable {\n    transition: none;\n  }\n\n  // The active class is added after the element is added\n  // so it can animate scale to default\n  .mat-badge-content.mat-badge-active {\n    // Scale to `none` instead of `1` to avoid blurry text in some browsers.\n    transform: none;\n  }\n\n  .mat-badge-small {\n    @include _mat-badge-size($mat-badge-small-size);\n  }\n  .mat-badge-medium {\n    @include _mat-badge-size($mat-badge-default-size);\n  }\n  .mat-badge-large {\n    @include _mat-badge-size($mat-badge-large-size);\n  }\n}\n\n@mixin mat-badge-typography($config) {\n  .mat-badge-content {\n    font-weight: $mat-badge-font-weight;\n    font-size: $mat-badge-font-size;\n    font-family: mat-font-family($config);\n  }\n\n  .mat-badge-small .mat-badge-content {\n    // Set the font size to 75% of the original.\n    font-size: $mat-badge-font-size * 0.75;\n  }\n\n  .mat-badge-large .mat-badge-content {\n    font-size: $mat-badge-font-size * 2;\n  }\n}\n\n\n\n\n\n@mixin mat-bottom-sheet-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-bottom-sheet-container {\n    @include _mat-theme-elevation(16, $theme);\n    background: mat-color($background, dialog);\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-bottom-sheet-typography($config) {\n  .mat-bottom-sheet-container {\n    @include mat-typography-level-to-styles($config, body-1);\n  }\n}\n\n\n\n\n\n$_mat-button-ripple-opacity: 0.1;\n\n// Applies a focus style to an mat-button element for each of the supported palettes.\n@mixin _mat-button-focus-overlay-color($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  &.mat-primary .mat-button-focus-overlay {\n    background-color: mat-color($primary);\n  }\n\n  &.mat-accent .mat-button-focus-overlay {\n    background-color: mat-color($accent);\n  }\n\n  &.mat-warn .mat-button-focus-overlay {\n    background-color: mat-color($warn);\n  }\n\n  &[disabled] .mat-button-focus-overlay {\n    background-color: transparent;\n  }\n}\n\n@mixin _mat-button-ripple-color($theme, $hue, $opacity: $_mat-button-ripple-opacity) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  &.mat-primary .mat-ripple-element {\n    background-color: mat-color($primary, $hue, $opacity);\n  }\n\n  &.mat-accent .mat-ripple-element {\n    background-color: mat-color($accent, $hue, $opacity);\n  }\n\n  &.mat-warn .mat-ripple-element {\n    background-color: mat-color($warn, $hue, $opacity);\n  }\n}\n\n// Applies a property to an mat-button element for each of the supported palettes.\n@mixin _mat-button-theme-property($theme, $property, $hue) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  &.mat-primary {\n    #{$property}: mat-color($primary, $hue);\n  }\n  &.mat-accent {\n    #{$property}: mat-color($accent, $hue);\n  }\n  &.mat-warn {\n    #{$property}: mat-color($warn, $hue);\n  }\n\n  &.mat-primary, &.mat-accent, &.mat-warn, &[disabled] {\n    &[disabled] {\n      $palette: if($property == 'color', $foreground, $background);\n      #{$property}: mat-color($palette, disabled-button);\n    }\n  }\n}\n\n@mixin mat-button-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-button, .mat-icon-button, .mat-stroked-button {\n    // Buttons without a background color should inherit the font color. This is necessary to\n    // ensure that the button is readable on custom background colors. It's wrong to always assume\n    // that those buttons are always placed inside of containers with the default background\n    // color of the theme (e.g. themed toolbars).\n    color: inherit;\n    background: transparent;\n\n    @include _mat-button-theme-property($theme, 'color', text);\n    @include _mat-button-focus-overlay-color($theme);\n\n    // Setup the ripple color to be based on the text color. This ensures that the ripples\n    // are matching with the current theme palette and are in contrast to the background color\n    // (e.g in themed toolbars).\n    .mat-ripple-element {\n      opacity: $_mat-button-ripple-opacity;\n      background-color: currentColor;\n    }\n  }\n\n  .mat-button-focus-overlay {\n    background: map_get($foreground, base);\n  }\n\n  // Note: this needs a bit extra specificity, because we're not guaranteed the inclusion\n  // order of the theme styles and the button reset may end up resetting this as well.\n  .mat-stroked-button:not([disabled]) {\n    border-color: mat-color($foreground, divider);\n  }\n\n  .mat-flat-button, .mat-raised-button, .mat-fab, .mat-mini-fab {\n    // Default font and background color when not using any color palette.\n    color: mat-color($foreground, text);\n    background-color: mat-color($background, raised-button);\n\n    @include _mat-button-theme-property($theme, 'color', default-contrast);\n    @include _mat-button-theme-property($theme, 'background-color', default);\n    @include _mat-button-ripple-color($theme, default-contrast);\n  }\n\n  .mat-stroked-button, .mat-flat-button {\n    @include _mat-theme-overridable-elevation(0, $theme);\n  }\n\n  .mat-raised-button {\n    @include _mat-theme-overridable-elevation(2, $theme);\n\n    &:not([disabled]):active {\n      @include _mat-theme-overridable-elevation(8, $theme);\n    }\n\n    &[disabled] {\n      @include _mat-theme-overridable-elevation(0, $theme);\n    }\n  }\n\n  .mat-fab, .mat-mini-fab {\n    @include _mat-theme-overridable-elevation(6, $theme);\n\n    &:not([disabled]):active {\n      @include _mat-theme-overridable-elevation(12, $theme);\n    }\n\n    &[disabled] {\n      @include _mat-theme-overridable-elevation(0, $theme);\n    }\n  }\n}\n\n@mixin mat-button-typography($config) {\n  .mat-button, .mat-raised-button, .mat-icon-button, .mat-stroked-button,\n  .mat-flat-button, .mat-fab, .mat-mini-fab {\n    font: {\n      family: mat-font-family($config, button);\n      size: mat-font-size($config, button);\n      weight: mat-font-weight($config, button);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin mat-button-toggle-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n  $divider-color: mat-color($foreground, divider);\n\n  .mat-button-toggle-standalone,\n  .mat-button-toggle-group {\n    @include _mat-theme-elevation(2, $theme);\n  }\n\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n  .mat-button-toggle-group-appearance-standard {\n    box-shadow: none;\n  }\n\n  .mat-button-toggle {\n    color: mat-color($foreground, hint-text);\n\n    .mat-button-toggle-focus-overlay {\n      background-color: mat-color($background, focused-button);\n    }\n  }\n\n  .mat-button-toggle-appearance-standard {\n    color: mat-color($foreground, text);\n    background: mat-color($background, card);\n\n    .mat-button-toggle-focus-overlay {\n      background-color: mat-color($background, focused-button, 1);\n    }\n  }\n\n  .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n    border-left: solid 1px $divider-color;\n  }\n\n  [dir='rtl'] .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n    border-left: none;\n    border-right: solid 1px $divider-color;\n  }\n\n  .mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical {\n    .mat-button-toggle + .mat-button-toggle {\n      border-left: none;\n      border-right: none;\n      border-top: solid 1px $divider-color;\n    }\n  }\n\n  .mat-button-toggle-checked {\n    background-color: mat-color($background, selected-button);\n    color: mat-color($foreground, secondary-text);\n\n    &.mat-button-toggle-appearance-standard {\n      color: mat-color($foreground, text);\n    }\n  }\n\n  .mat-button-toggle-disabled {\n    color: mat-color($foreground, disabled-button);\n    background-color: mat-color($background, disabled-button-toggle);\n\n    &.mat-button-toggle-appearance-standard {\n      background: mat-color($background, card);\n    }\n\n    &.mat-button-toggle-checked {\n      background-color: mat-color($background, selected-disabled-button);\n    }\n  }\n\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n  .mat-button-toggle-group-appearance-standard {\n    border: solid 1px $divider-color;\n  }\n}\n\n@mixin mat-button-toggle-typography($config) {\n  .mat-button-toggle {\n    font-family: mat-font-family($config);\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-card-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-card {\n    @include _mat-theme-overridable-elevation(1, $theme);\n    background: mat-color($background, card);\n    color: mat-color($foreground, text);\n\n    // Needs extra specificity to be able to override the elevation selectors.\n    &.mat-card-flat {\n      @include _mat-theme-overridable-elevation(0, $theme);\n    }\n  }\n\n  .mat-card-subtitle {\n    color: mat-color($foreground, secondary-text);\n  }\n}\n\n@mixin mat-card-typography($config) {\n  .mat-card {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-card-title {\n    font: {\n      size: mat-font-size($config, headline);\n      weight: mat-font-weight($config, title);\n    }\n  }\n\n  .mat-card-header .mat-card-title {\n    font-size: mat-font-size($config, title);\n  }\n\n  .mat-card-subtitle,\n  .mat-card-content {\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n\n\n\n\n\n@mixin mat-checkbox-theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n\n  // The color of the checkbox's checkmark / mixedmark.\n  $checkbox-mark-color: mat-color($background, background);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n\n  .mat-checkbox-frame {\n    border-color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-checkbox-checkmark {\n    fill: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-checkmark-path {\n    // !important is needed here because a stroke must be set as an\n    // attribute on the SVG in order for line animation to work properly.\n    stroke: $checkbox-mark-color !important;\n\n    @include cdk-high-contrast(black-on-white) {\n      // Having the one above be !important ends up overriding the browser's automatic\n      // color inversion so we need to re-invert it ourselves for black-on-white.\n      stroke: #000 !important;\n    }\n  }\n\n  .mat-checkbox-mixedmark {\n    background-color: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-indeterminate, .mat-checkbox-checked {\n    &.mat-primary .mat-checkbox-background {\n      background-color: mat-color($primary);\n    }\n\n    &.mat-accent .mat-checkbox-background {\n      background-color: mat-color($accent);\n    }\n\n    &.mat-warn .mat-checkbox-background {\n      background-color: mat-color($warn);\n    }\n  }\n\n  .mat-checkbox-disabled {\n    &.mat-checkbox-checked,\n    &.mat-checkbox-indeterminate {\n      .mat-checkbox-background {\n        background-color: $disabled-color;\n      }\n    }\n\n    &:not(.mat-checkbox-checked) {\n      .mat-checkbox-frame {\n        border-color: $disabled-color;\n      }\n    }\n\n    .mat-checkbox-label {\n      color: mat-color($foreground, secondary-text);\n    }\n\n    @include cdk-high-contrast {\n      opacity: 0.5;\n    }\n  }\n\n  // This one is moved down here so it can target both\n  // the theme colors and the disabled state.\n  @include cdk-high-contrast {\n    .mat-checkbox-background {\n      // Needs to be removed because it hides the checkbox outline.\n      background: none;\n    }\n  }\n\n  // Switch this to a solid color since we're using `opacity`\n  // to control how opaque the ripple should be.\n  .mat-checkbox .mat-ripple-element {\n    background-color: map_get(map-get($theme, foreground), base);\n  }\n\n  .mat-checkbox-checked:not(.mat-checkbox-disabled),\n  .mat-checkbox:active:not(.mat-checkbox-disabled) {\n    &.mat-primary .mat-ripple-element {\n      background: mat-color($primary);\n    }\n\n    &.mat-accent .mat-ripple-element {\n      background: mat-color($accent);\n    }\n\n    &.mat-warn .mat-ripple-element {\n      background: mat-color($warn);\n    }\n  }\n}\n\n@mixin mat-checkbox-typography($config) {\n  .mat-checkbox {\n    font-family: mat-font-family($config);\n  }\n\n  // TODO(kara): Remove this style when fixing vertical baseline\n  .mat-checkbox-layout .mat-checkbox-label {\n    line-height: mat-line-height($config, body-2);\n  }\n}\n\n\n\n\n\n\n$mat-chip-remove-font-size: 18px;\n\n@mixin mat-chips-color($foreground, $background) {\n  background-color: $background;\n  color: $foreground;\n\n  .mat-chip-remove {\n    color: $foreground;\n    opacity: 0.4;\n  }\n}\n\n@mixin mat-chips-theme-color($palette) {\n  @include mat-chips-color(mat-color($palette, default-contrast), mat-color($palette));\n\n  .mat-ripple-element {\n    background: mat-color($palette, default-contrast, 0.1);\n  }\n}\n\n@mixin mat-chips-theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  $unselected-background: mat-color($background, unselected-chip);\n  $unselected-foreground: mat-color($foreground, text);\n\n  .mat-chip.mat-standard-chip {\n    @include mat-chips-color($unselected-foreground, $unselected-background);\n\n    &:not(.mat-chip-disabled) {\n      &:active {\n        @include _mat-theme-elevation(3, $theme);\n      }\n\n      .mat-chip-remove:hover {\n        opacity: 0.54;\n      }\n    }\n\n    &.mat-chip-disabled {\n      opacity: 0.4;\n    }\n\n    &::after {\n      background: map_get($foreground, base);\n    }\n  }\n\n  .mat-chip.mat-standard-chip.mat-chip-selected {\n    &.mat-primary {\n      @include mat-chips-theme-color($primary);\n    }\n\n    &.mat-warn {\n      @include mat-chips-theme-color($warn);\n    }\n\n    &.mat-accent {\n      @include mat-chips-theme-color($accent);\n    }\n  }\n}\n\n@mixin mat-chips-typography($config) {\n  .mat-chip {\n    font-size: mat-font-size($config, body-2);\n    font-weight: mat-font-weight($config, body-2);\n\n    .mat-chip-trailing-icon.mat-icon,\n    .mat-chip-remove.mat-icon {\n      font-size: $mat-chip-remove-font-size;\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-table-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-table {\n    background: mat-color($background, 'card');\n  }\n\n  .mat-table thead, .mat-table tbody, .mat-table tfoot,\n  mat-header-row, mat-row, mat-footer-row,\n  [mat-header-row], [mat-row], [mat-footer-row],\n  .mat-table-sticky {\n    background: inherit;\n  }\n\n  mat-row, mat-header-row, mat-footer-row,\n  th.mat-header-cell, td.mat-cell, td.mat-footer-cell {\n    border-bottom-color: mat-color($foreground, divider);\n  }\n\n  .mat-header-cell {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-cell, .mat-footer-cell {\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-table-typography($config) {\n  .mat-table {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-header-cell {\n    font-size: mat-font-size($config, caption);\n    font-weight: mat-font-weight($config, body-2);\n  }\n\n  .mat-cell, .mat-footer-cell {\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n\n\n\n\n\n\n$mat-datepicker-selected-today-box-shadow-width: 1px;\n$mat-datepicker-selected-fade-amount: 0.6;\n$mat-datepicker-today-fade-amount: 0.2;\n$mat-calendar-body-font-size: 13px !default;\n$mat-calendar-weekday-table-font-size: 11px !default;\n\n@mixin _mat-datepicker-color($palette) {\n  .mat-calendar-body-selected {\n    background-color: mat-color($palette);\n    color: mat-color($palette, default-contrast);\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-selected {\n    $background: mat-color($palette);\n\n    @if (type-of($background) == color) {\n      background-color: fade-out($background, $mat-datepicker-selected-fade-amount);\n    }\n    @else {\n      // If we couldn't resolve to background to a color (e.g. it's a CSS variable),\n      // fall back to fading the content out via `opacity`.\n      opacity: $mat-datepicker-today-fade-amount;\n    }\n  }\n\n  .mat-calendar-body-today.mat-calendar-body-selected {\n    box-shadow: inset 0 0 0 $mat-datepicker-selected-today-box-shadow-width\n                mat-color($palette, default-contrast);\n  }\n}\n\n@mixin mat-datepicker-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n\n  .mat-calendar-arrow {\n    border-top-color: mat-color($foreground, icon);\n  }\n\n  // The prev/next buttons need a bit more specificity to\n  // avoid being overwritten by the .mat-icon-button.\n  .mat-datepicker-toggle,\n  .mat-datepicker-content .mat-calendar-next-button,\n  .mat-datepicker-content .mat-calendar-previous-button {\n    color: mat-color($foreground, icon);\n  }\n\n  .mat-calendar-table-header {\n    color: mat-color($foreground, hint-text);\n  }\n\n  .mat-calendar-table-header-divider::after {\n    background: mat-color($foreground, divider);\n  }\n\n  .mat-calendar-body-label {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-calendar-body-cell-content {\n    color: mat-color($foreground, text);\n    border-color: transparent;\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected) {\n    color: mat-color($foreground, disabled-text);\n  }\n\n  .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover,\n  .cdk-keyboard-focused .mat-calendar-body-active,\n  .cdk-program-focused .mat-calendar-body-active {\n    & > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected) {\n      background-color: mat-color($background, hover);\n    }\n  }\n\n  .mat-calendar-body-today:not(.mat-calendar-body-selected) {\n    // Note: though it's not text, the border is a hint about the fact that this is today's date,\n    // so we use the hint color.\n    border-color: mat-color($foreground, hint-text);\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-today:not(.mat-calendar-body-selected) {\n    $color: mat-color($foreground, hint-text);\n\n    @if (type-of($color) == color) {\n      border-color: fade-out($color, $mat-datepicker-today-fade-amount);\n    }\n    @else {\n      // If the color didn't resolve to a color value, but something like a CSS variable, we can't\n      // fade it out so we fall back to reducing the element opacity. Note that we don't use the\n      // $mat-datepicker-today-fade-amount, because hint text usually has some opacity applied\n      // to it already and we don't want them to stack on top of each other.\n      opacity: 0.5;\n    }\n  }\n\n  @include _mat-datepicker-color(map-get($theme, primary));\n\n  .mat-datepicker-content {\n    @include _mat-theme-elevation(4, $theme);\n    background-color: mat-color($background, card);\n    color: mat-color($foreground, text);\n\n    &.mat-accent {\n      @include _mat-datepicker-color(map-get($theme, accent));\n    }\n\n    &.mat-warn {\n      @include _mat-datepicker-color(map-get($theme, warn));\n    }\n  }\n\n  .mat-datepicker-content-touch {\n    @include _mat-theme-elevation(0, $theme);\n  }\n\n  .mat-datepicker-toggle-active {\n    color: mat-color(map-get($theme, primary), text);\n\n    &.mat-accent {\n      color: mat-color(map-get($theme, accent), text);\n    }\n\n    &.mat-warn {\n      color: mat-color(map-get($theme, warn), text);\n    }\n  }\n}\n\n@mixin mat-datepicker-typography($config) {\n  .mat-calendar {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-calendar-body {\n    font-size: $mat-calendar-body-font-size;\n  }\n\n  .mat-calendar-body-label,\n  .mat-calendar-period-button {\n    font: {\n      size: mat-font-size($config, button);\n      weight: mat-font-weight($config, button);\n    }\n  }\n\n  .mat-calendar-table-header th {\n    font: {\n      size: $mat-calendar-weekday-table-font-size;\n      weight: mat-font-weight($config, body-1);\n    }\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-dialog-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-dialog-container {\n    @include _mat-theme-elevation(24, $theme);\n    background: mat-color($background, dialog);\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-dialog-typography($config) {\n  .mat-dialog-title {\n    @include mat-typography-level-to-styles($config, title);\n  }\n}\n\n\n\n\n\n\n@mixin mat-expansion-panel-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-expansion-panel {\n    @include _mat-theme-overridable-elevation(2, $theme);\n    background: mat-color($background, card);\n    color: mat-color($foreground, text);\n  }\n\n  .mat-action-row {\n    border-top-color: mat-color($foreground, divider);\n  }\n\n  .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header {\n    &:not([aria-disabled='true']) {\n      &.cdk-keyboard-focused,\n      &.cdk-program-focused,\n      &:hover {\n        background: mat-color($background, hover);\n      }\n    }\n  }\n\n  // Disable the hover on touch devices since it can appear like it is stuck. We can't use\n  // `@media (hover)` above, because the desktop support browser support isn't great.\n  @media (hover: none) {\n    .mat-expansion-panel:not(.mat-expanded):not([aria-disabled='true'])\n      .mat-expansion-panel-header:hover {\n      background: mat-color($background, card);\n    }\n  }\n\n  .mat-expansion-panel-header-title {\n    color: mat-color($foreground, text);\n  }\n\n  .mat-expansion-panel-header-description,\n  .mat-expansion-indicator::after {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-expansion-panel-header[aria-disabled='true'] {\n    color: mat-color($foreground, disabled-button);\n\n    .mat-expansion-panel-header-title,\n    .mat-expansion-panel-header-description {\n      color: inherit;\n    }\n  }\n}\n\n@mixin mat-expansion-panel-typography($config) {\n  .mat-expansion-panel-header {\n    font: {\n      family: mat-font-family($config, subheading-1);\n      size: mat-font-size($config, subheading-1);\n      weight: mat-font-weight($config, subheading-1);\n    }\n  }\n\n  .mat-expansion-panel-content {\n    @include mat-typography-level-to-styles($config, body-1);\n  }\n}\n\n\n\n\n// This mixin will ensure that lines that overflow the container will hide the overflow and\n// truncate neatly with an ellipsis.\n@mixin mat-truncate-line() {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n// Mixin to provide all mat-line styles, changing secondary font size based on whether the list\n// is in dense mode.\n@mixin mat-line-base($secondary-font-size) {\n  .mat-line {\n    @include mat-truncate-line();\n    display: block;\n    box-sizing: border-box;\n\n    // all lines but the top line should have smaller text\n    &:nth-child(n+2) {\n      font-size: $secondary-font-size;\n    }\n  }\n}\n\n// This mixin normalizes default element styles, e.g. font weight for heading text.\n@mixin mat-normalize-text() {\n  & > * {\n    margin: 0;\n    padding: 0;\n    font-weight: normal;\n    font-size: inherit;\n  }\n}\n\n// This mixin provides base styles for the wrapper around mat-line elements in a list.\n@mixin mat-line-wrapper-base() {\n  @include mat-normalize-text();\n\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  box-sizing: border-box;\n  overflow: hidden;\n\n  // Must remove wrapper when lines are empty or it takes up horizontal\n  // space and pushes other elements to the right.\n  &:empty {\n    display: none;\n  }\n}\n\n\n\n// Include this empty mixin for consistency with the other components.\n@mixin mat-grid-list-theme($theme) { }\n\n@mixin mat-grid-list-typography($config) {\n  .mat-grid-tile-header,\n  .mat-grid-tile-footer {\n    @include mat-line-base(mat-font-size($config, caption));\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n\n\n\n// Include this empty mixin for consistency with the other components.\n@mixin mat-icon-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-icon {\n    &.mat-primary {\n      color: mat-color($primary, text);\n    }\n\n    &.mat-accent {\n      color: mat-color($accent, text);\n    }\n\n    &.mat-warn {\n      color: mat-color($warn, text);\n    }\n  }\n}\n\n@mixin mat-icon-typography($config) { }\n\n\n\n\n\n// Renders a gradient for showing the dashed line when the input is disabled.\n// Unlike using a border, a gradient allows us to adjust the spacing of the dotted line\n// to match the Material Design spec.\n@mixin mat-control-disabled-underline($color) {\n  background-image: linear-gradient(to right, $color 0%, $color 33%, transparent 0%);\n  background-size: 4px 100%;\n  background-repeat: repeat-x;\n}\n\n// Figures out the color of the placeholder for a form control.\n// Used primarily to prevent the various form controls from\n// becoming out of sync since these colors aren't in a palette.\n@function _mat-control-placeholder-color($theme) {\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n  @return mat-color($foreground, secondary-text, if($is-dark-theme, 0.5, 0.42));\n}\n\n\n/* stylelint-disable material/no-prefixes */\n@mixin user-select($value) {\n  -webkit-user-select: $value;\n  -moz-user-select: $value;\n  -ms-user-select: $value;\n  user-select: $value;\n}\n\n@mixin input-placeholder {\n  &::placeholder {\n    @content;\n  }\n\n  &::-moz-placeholder {\n    @content;\n  }\n\n  &::-webkit-input-placeholder {\n    @content;\n  }\n\n  &:-ms-input-placeholder {\n    @content;\n  }\n}\n\n@mixin cursor-grab {\n  cursor: -webkit-grab;\n  cursor: grab;\n}\n\n@mixin cursor-grabbing {\n  cursor: -webkit-grabbing;\n  cursor: grabbing;\n}\n\n@mixin backface-visibility($value) {\n  -webkit-backface-visibility: $value;\n  backface-visibility: $value;\n}\n/* stylelint-enable */\n\n\n\n@mixin mat-input-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $foreground: map-get($theme, foreground);\n\n  .mat-form-field-type-mat-native-select .mat-form-field-infix::after {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-input-element:disabled,\n  .mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after {\n    color: mat-color($foreground, disabled-text);\n  }\n\n  .mat-input-element {\n    caret-color: mat-color($primary, text);\n\n    @include input-placeholder {\n      color: _mat-control-placeholder-color($theme);\n    }\n\n    // On dark themes we set the native `select` color to some shade of white,\n    // however the color propagates to all of the `option` elements, which are\n    // always on a white background inside the dropdown, causing them to blend in.\n    // Since we can't change background of the dropdown, we need to explicitly\n    // reset the color of the options to something dark.\n    @if (map-get($theme, is-dark)) {\n      option {\n        color: $dark-primary-text;\n      }\n\n      option:disabled {\n        color: $dark-disabled-text;\n      }\n    }\n  }\n\n  .mat-accent .mat-input-element {\n    caret-color: mat-color($accent, text);\n  }\n\n  .mat-warn .mat-input-element,\n  .mat-form-field-invalid .mat-input-element {\n    caret-color: mat-color($warn, text);\n  }\n\n  .mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after {\n    color: mat-color($warn, text);\n  }\n}\n\n@mixin mat-input-typography($config) {\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n\n  // The amount of space between the top of the line and the top of the actual text\n  // (as a fraction of the font-size).\n  $line-spacing: ($line-height - 1) / 2;\n\n  // <input> elements seem to have their height set slightly too large on Safari causing the text to\n  // be misaligned w.r.t. the placeholder. Adding this margin corrects it.\n  input.mat-input-element {\n    margin-top: -$line-spacing * 1em;\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-list-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-list-base {\n    .mat-list-item {\n      color: mat-color($foreground, text);\n    }\n\n    .mat-list-option {\n      color: mat-color($foreground, text);\n    }\n\n    .mat-subheader {\n      color: mat-color($foreground, secondary-text);\n    }\n  }\n\n  .mat-list-item-disabled {\n    background-color: mat-color($background, disabled-list-option);\n  }\n\n  .mat-list-option,\n  .mat-nav-list .mat-list-item,\n  .mat-action-list .mat-list-item {\n    &:hover, &:focus {\n      background: mat-color($background, 'hover');\n    }\n  }\n}\n\n@mixin mat-list-typography($config) {\n  $font-family: mat-font-family($config);\n\n  .mat-list-item {\n    font-family: $font-family;\n  }\n\n  .mat-list-option {\n    font-family: $font-family;\n  }\n\n  // Default list\n  .mat-list-base {\n    .mat-list-item {\n      font-size: mat-font-size($config, subheading-2);\n      @include mat-line-base(mat-font-size($config, body-1));\n    }\n\n    .mat-list-option {\n      font-size: mat-font-size($config, subheading-2);\n      @include mat-line-base(mat-font-size($config, body-1));\n    }\n\n    .mat-subheader {\n      font-family: mat-font-family($config, body-2);\n      font-size: mat-font-size($config, body-2);\n      font-weight: mat-font-weight($config, body-2);\n    }\n  }\n\n  // Dense list\n  .mat-list-base[dense] {\n    .mat-list-item {\n      font-size: mat-font-size($config, caption);\n      @include mat-line-base(mat-font-size($config, caption));\n    }\n\n    .mat-list-option {\n      font-size: mat-font-size($config, caption);\n      @include mat-line-base(mat-font-size($config, caption));\n    }\n\n    .mat-subheader {\n      font-family: $font-family;\n      font-size: mat-font-size($config, caption);\n      font-weight: mat-font-weight($config, body-2);\n    }\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-menu-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-menu-panel {\n    @include _mat-theme-overridable-elevation(4, $theme);\n    background: mat-color($background, 'card');\n  }\n\n  .mat-menu-item {\n    background: transparent;\n    color: mat-color($foreground, 'text');\n\n    &[disabled] {\n      &, &::after {\n        color: mat-color($foreground, 'disabled');\n      }\n    }\n  }\n\n  .mat-menu-item .mat-icon-no-color,\n  .mat-menu-item-submenu-trigger::after {\n    color: mat-color($foreground, 'icon');\n  }\n\n  .mat-menu-item:hover,\n  .mat-menu-item.cdk-program-focused,\n  .mat-menu-item.cdk-keyboard-focused,\n  .mat-menu-item-highlighted {\n    &:not([disabled]) {\n      background: mat-color($background, 'hover');\n    }\n  }\n}\n\n@mixin mat-menu-typography($config) {\n  .mat-menu-item {\n    font: {\n      family: mat-font-family($config, body-1);\n      size: mat-font-size($config, body-1);\n      weight: mat-font-weight($config, body-1);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin mat-paginator-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n\n  .mat-paginator {\n    background: mat-color($background, 'card');\n  }\n\n  .mat-paginator,\n  .mat-paginator-page-size .mat-select-trigger {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-paginator-decrement,\n  .mat-paginator-increment {\n    border-top: 2px solid mat-color($foreground, 'icon');\n    border-right: 2px solid mat-color($foreground, 'icon');\n  }\n\n  .mat-paginator-first,\n  .mat-paginator-last {\n    border-top: 2px solid mat-color($foreground, 'icon');\n  }\n\n  .mat-icon-button[disabled] {\n    .mat-paginator-decrement,\n    .mat-paginator-increment,\n    .mat-paginator-first,\n    .mat-paginator-last {\n      border-color: mat-color($foreground, 'disabled');\n    }\n  }\n}\n\n@mixin mat-paginator-typography($config) {\n  .mat-paginator,\n  .mat-paginator-page-size .mat-select-trigger {\n    font: {\n      family: mat-font-family($config, caption);\n      size: mat-font-size($config, caption);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-progress-bar-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  .mat-progress-bar-background {\n    fill: mat-color($primary, lighter);\n  }\n\n  .mat-progress-bar-buffer {\n    background-color: mat-color($primary, lighter);\n  }\n\n  .mat-progress-bar-fill::after {\n    background-color: mat-color($primary);\n  }\n\n  .mat-progress-bar.mat-accent {\n    .mat-progress-bar-background {\n      fill: mat-color($accent, lighter);\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: mat-color($accent, lighter);\n    }\n\n    .mat-progress-bar-fill::after {\n      background-color: mat-color($accent);\n    }\n  }\n\n  .mat-progress-bar.mat-warn {\n    .mat-progress-bar-background {\n      fill: mat-color($warn, lighter);\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: mat-color($warn, lighter);\n    }\n\n    .mat-progress-bar-fill::after {\n      background-color: mat-color($warn);\n    }\n  }\n}\n\n@mixin mat-progress-bar-typography($config) { }\n\n\n\n\n\n\n@mixin mat-progress-spinner-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  .mat-progress-spinner, .mat-spinner {\n    circle {\n      stroke: mat-color($primary);\n    }\n\n    &.mat-accent circle {\n      stroke: mat-color($accent);\n    }\n\n    &.mat-warn circle {\n      stroke: mat-color($warn);\n    }\n  }\n}\n\n@mixin mat-progress-spinner-typography($config) { }\n\n\n\n\n\n@mixin _mat-radio-color($palette) {\n  &.mat-radio-checked .mat-radio-outer-circle {\n    border-color: mat-color($palette);\n  }\n\n  .mat-radio-inner-circle,\n  .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),\n  &.mat-radio-checked .mat-radio-persistent-ripple,\n  &:active .mat-radio-persistent-ripple {\n    background-color: mat-color($palette);\n  }\n}\n\n@mixin mat-radio-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-radio-outer-circle {\n    border-color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-radio-button {\n    &.mat-primary {\n      @include _mat-radio-color($primary);\n    }\n\n    &.mat-accent {\n      @include _mat-radio-color($accent);\n    }\n\n    &.mat-warn {\n      @include _mat-radio-color($warn);\n    }\n\n    // This needs extra specificity, because the classes above are combined\n    // (e.g. `.mat-radio-button.mat-accent`) which increases their specificity a lot.\n    // TODO: consider making the selectors into descendants (`.mat-primary .mat-radio-button`).\n    &.mat-radio-disabled {\n      &.mat-radio-checked .mat-radio-outer-circle,\n      .mat-radio-outer-circle {\n        border-color: mat-color($foreground, disabled);\n      }\n\n      .mat-radio-ripple .mat-ripple-element,\n      .mat-radio-inner-circle {\n        background-color: mat-color($foreground, disabled);\n      }\n\n      .mat-radio-label-content {\n        color: mat-color($foreground, disabled);\n      }\n    }\n\n    // Switch this to a solid color since we're using `opacity`\n    // to control how opaque the ripple should be.\n    .mat-ripple-element {\n      background-color: map_get($foreground, base);\n    }\n  }\n}\n\n@mixin mat-radio-typography($config) {\n  .mat-radio-button {\n    font-family: mat-font-family($config);\n  }\n}\n\n\n\n\n\n\n\n\n@mixin mat-select-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  .mat-select-value {\n    color: mat-color($foreground, text);\n  }\n\n  .mat-select-placeholder {\n    color: _mat-control-placeholder-color($theme);\n  }\n\n  .mat-select-disabled .mat-select-value {\n    color: mat-color($foreground, disabled-text);\n  }\n\n  .mat-select-arrow {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-select-panel {\n    background: mat-color($background, card);\n    @include _mat-theme-overridable-elevation(4, $theme);\n\n    .mat-option.mat-selected:not(.mat-option-multiple) {\n      background: mat-color($background, hover, 0.12);\n    }\n  }\n\n  .mat-form-field {\n    &.mat-focused {\n      &.mat-primary .mat-select-arrow {\n        color: mat-color($primary, text);\n      }\n\n      &.mat-accent .mat-select-arrow {\n        color: mat-color($accent, text);\n      }\n\n      &.mat-warn .mat-select-arrow {\n        color: mat-color($warn, text);\n      }\n    }\n\n    .mat-select.mat-select-invalid .mat-select-arrow {\n      color: mat-color($warn, text);\n    }\n\n    .mat-select.mat-select-disabled .mat-select-arrow {\n      color: mat-color($foreground, disabled-text);\n    }\n  }\n}\n\n@mixin mat-select-typography($config) {\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n\n  .mat-select {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-select-trigger {\n    height: $line-height * 1em;\n  }\n}\n\n\n\n\n\n\n@mixin mat-sidenav-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  $drawer-background-color: mat-color($background, dialog);\n  $drawer-container-background-color:  mat-color($background, background);\n  $drawer-push-background-color: mat-color($background, dialog);\n  $drawer-side-border: solid 1px mat-color($foreground, divider);\n\n  .mat-drawer-container {\n    background-color: $drawer-container-background-color;\n    color: mat-color($foreground, text);\n  }\n\n  .mat-drawer {\n    background-color: $drawer-background-color;\n    color: mat-color($foreground, text);\n\n    &.mat-drawer-push {\n      background-color: $drawer-push-background-color;\n    }\n\n    &:not(.mat-drawer-side) {\n      // The elevation of z-16 is noted in the design specifications.\n      // See https://material.io/design/components/navigation-drawer.html\n      @include _mat-theme-elevation(16, $theme);\n    }\n  }\n\n  .mat-drawer-side {\n    border-right: $drawer-side-border;\n\n    &.mat-drawer-end {\n      border-left: $drawer-side-border;\n      border-right: none;\n    }\n  }\n\n  [dir='rtl'] .mat-drawer-side {\n    border-left: $drawer-side-border;\n    border-right: none;\n\n    &.mat-drawer-end {\n      border-left: none;\n      border-right: $drawer-side-border;\n    }\n  }\n\n  .mat-drawer-backdrop.mat-drawer-shown {\n    $opacity: 0.6;\n    $backdrop-color: mat-color($background, card, $opacity);\n\n    @if (type-of($backdrop-color) == color) {\n      // We use invert() here to have the darken the background color expected to be used. If the\n      // background is light, we use a dark backdrop. If the background is dark,\n      // we use a light backdrop.\n      background-color: invert($backdrop-color);\n    }\n    @else {\n      // If we couldn't resolve the backdrop color to a color value, fall back to using\n      // `opacity` to make it opaque since its end value could be a solid color.\n      background-color: $backdrop-color;\n      opacity: $opacity;\n    }\n  }\n}\n\n@mixin mat-sidenav-typography($config) { }\n\n\n\n\n\n\n@mixin _mat-slide-toggle-checked($palette, $thumb-checked-hue) {\n  &.mat-checked {\n    .mat-slide-toggle-thumb {\n      background-color: mat-color($palette, $thumb-checked-hue);\n    }\n\n    .mat-slide-toggle-bar {\n      // Opacity is determined from the specs for the selection controls.\n      // See: https://material.io/design/components/selection-controls.html#specs\n      background-color: mat-color($palette, $thumb-checked-hue, 0.54);\n    }\n\n    .mat-ripple-element {\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\n      background-color: mat-color($palette, $thumb-checked-hue);\n    }\n  }\n}\n\n@mixin mat-slide-toggle-theme($theme) {\n  $is-dark: map_get($theme, is-dark);\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  // Color hues are based on the specs which briefly show the hues that are applied to a switch.\n  // The 2018 specs no longer describe how dark switches should look like. Due to the lack of\n  // information for dark themed switches, we partially keep the old behavior that is based on\n  // the previous specifications. For the checked color we always use the `default` hue because\n  // that follows MDC and also makes it easier for people to create a custom theme without needing\n  // to specify each hue individually.\n  $thumb-unchecked-hue: if($is-dark, 400, 50);\n  $thumb-checked-hue: default;\n\n  $bar-unchecked-color: mat-color($foreground, disabled);\n  $ripple-unchecked-color: mat-color($foreground, base);\n\n  .mat-slide-toggle {\n    @include _mat-slide-toggle-checked($accent, $thumb-checked-hue);\n\n    &.mat-primary {\n      @include _mat-slide-toggle-checked($primary, $thumb-checked-hue);\n    }\n\n    &.mat-warn {\n      @include _mat-slide-toggle-checked($warn, $thumb-checked-hue);\n    }\n\n    &:not(.mat-checked) .mat-ripple-element {\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\n      background-color: $ripple-unchecked-color;\n    }\n  }\n\n  .mat-slide-toggle-thumb {\n    @include _mat-theme-elevation(1, $theme);\n    background-color: mat-color($mat-grey, $thumb-unchecked-hue);\n  }\n\n  .mat-slide-toggle-bar {\n    background-color: $bar-unchecked-color;\n  }\n}\n\n@mixin mat-slide-toggle-typography($config) {\n  .mat-slide-toggle-content {\n    font-family: mat-font-family($config);\n  }\n}\n\n\n\n\n\n@mixin _mat-slider-inner-content-theme($palette) {\n  .mat-slider-track-fill,\n  .mat-slider-thumb,\n  .mat-slider-thumb-label {\n    background-color: mat-color($palette);\n  }\n\n  .mat-slider-thumb-label-text {\n    color: mat-color($palette, default-contrast);\n  }\n}\n\n@mixin mat-slider-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  $mat-slider-off-color: mat-color($foreground, slider-off);\n  $mat-slider-off-focused-color: mat-color($foreground, slider-off-active);\n  $mat-slider-disabled-color: mat-color($foreground, slider-off);\n  $mat-slider-labeled-min-value-thumb-color: mat-color($foreground, slider-min);\n  $mat-slider-labeled-min-value-thumb-label-color: mat-color($foreground, slider-off);\n  $mat-slider-focus-ring-color: mat-color($accent, default, 0.2);\n  $mat-slider-focus-ring-min-value-color: mat-color($foreground, base, 0.12);\n  $mat-slider-tick-color: mat-color($foreground, base, 0.7);\n  $mat-slider-tick-size: 2px;\n\n  .mat-slider-track-background {\n    background-color: $mat-slider-off-color;\n  }\n\n  .mat-primary {\n    @include _mat-slider-inner-content-theme($primary);\n  }\n\n  .mat-accent {\n    @include _mat-slider-inner-content-theme($accent);\n  }\n\n  .mat-warn {\n    @include _mat-slider-inner-content-theme($warn);\n  }\n\n  .mat-slider-focus-ring {\n    background-color: $mat-slider-focus-ring-color;\n  }\n\n  .mat-slider:hover,\n  .cdk-focused {\n    .mat-slider-track-background {\n      background-color: $mat-slider-off-focused-color;\n    }\n  }\n\n  .mat-slider-disabled {\n    .mat-slider-track-background,\n    .mat-slider-track-fill,\n    .mat-slider-thumb {\n      background-color: $mat-slider-disabled-color;\n    }\n\n    &:hover {\n      .mat-slider-track-background {\n        background-color: $mat-slider-disabled-color;\n      }\n    }\n  }\n\n  .mat-slider-min-value {\n    .mat-slider-focus-ring {\n      background-color: $mat-slider-focus-ring-min-value-color;\n    }\n\n    &.mat-slider-thumb-label-showing {\n      .mat-slider-thumb,\n      .mat-slider-thumb-label {\n        background-color: $mat-slider-labeled-min-value-thumb-color;\n      }\n\n      &.cdk-focused {\n        .mat-slider-thumb,\n        .mat-slider-thumb-label {\n          background-color: $mat-slider-labeled-min-value-thumb-label-color;\n        }\n      }\n    }\n\n    &:not(.mat-slider-thumb-label-showing) {\n      .mat-slider-thumb {\n        border-color: $mat-slider-off-color;\n        background-color: transparent;\n      }\n\n      &:hover,\n      &.cdk-focused {\n        .mat-slider-thumb {\n          border-color: $mat-slider-off-focused-color;\n        }\n\n        &.mat-slider-disabled .mat-slider-thumb {\n          border-color: $mat-slider-disabled-color;\n        }\n      }\n    }\n  }\n\n  .mat-slider-has-ticks .mat-slider-wrapper::after {\n    border-color: $mat-slider-tick-color;\n  }\n\n  .mat-slider-horizontal .mat-slider-ticks {\n    background-image: repeating-linear-gradient(to right, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n    // Firefox doesn't draw the gradient correctly with 'to right'\n    // (see https://bugzilla.mozilla.org/show_bug.cgi?id=1314319).\n    background-image: -moz-repeating-linear-gradient(0.0001deg, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n  }\n\n  .mat-slider-vertical .mat-slider-ticks {\n    background-image: repeating-linear-gradient(to bottom, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n  }\n}\n\n@mixin mat-slider-typography($config) {\n  .mat-slider-thumb-label-text {\n    font: {\n      family: mat-font-family($config);\n      size: mat-font-size($config, caption);\n      weight: mat-font-weight($config, body-2);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-stepper-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n  $primary: map-get($theme, primary);\n  $warn: map-get($theme, warn);\n\n  .mat-step-header {\n    &.cdk-keyboard-focused,\n    &.cdk-program-focused,\n    &:hover {\n      background-color: mat-color($background, hover);\n    }\n\n    // On touch devices the :hover state will linger on the element after a tap.\n    // Reset it via `@media` after the declaration, because the media query isn't\n    // supported by all browsers yet.\n    @media (hover: none) {\n      &:hover {\n        background: none;\n      }\n    }\n\n    .mat-step-label,\n    .mat-step-optional {\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\n      // instead of secondary-text.\n      color: mat-color($foreground, secondary-text);\n    }\n\n    .mat-step-icon {\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\n      // instead of secondary-text.\n      background-color: mat-color($foreground, secondary-text);\n      color: mat-color($primary, default-contrast);\n    }\n\n    .mat-step-icon-selected,\n    .mat-step-icon-state-done,\n    .mat-step-icon-state-edit {\n      background-color: mat-color($primary);\n      color: mat-color($primary, default-contrast);\n    }\n\n    .mat-step-icon-state-error {\n      background-color: transparent;\n      color: mat-color($warn, text);\n    }\n\n    .mat-step-label.mat-step-label-active {\n      color: mat-color($foreground, text);\n    }\n\n    .mat-step-label.mat-step-label-error {\n      color: mat-color($warn, text);\n    }\n  }\n\n  .mat-stepper-horizontal, .mat-stepper-vertical {\n    background-color: mat-color($background, card);\n  }\n\n  .mat-stepper-vertical-line::before {\n    border-left-color: mat-color($foreground, divider);\n  }\n\n  .mat-horizontal-stepper-header::before,\n  .mat-horizontal-stepper-header::after,\n  .mat-stepper-horizontal-line {\n    border-top-color: mat-color($foreground, divider);\n  }\n}\n\n@mixin mat-stepper-typography($config) {\n  .mat-stepper-vertical, .mat-stepper-horizontal {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-step-label {\n    font: {\n      size: mat-font-size($config, body-1);\n      weight: mat-font-weight($config, body-1);\n    };\n  }\n\n  .mat-step-sub-label-error {\n    font-weight: normal;\n  }\n\n  .mat-step-label-error {\n    font-size: mat-font-size($config, body-2);\n  }\n\n  .mat-step-label-selected {\n    font: {\n      size: mat-font-size($config, body-2);\n      weight: mat-font-weight($config, body-2);\n    };\n  }\n}\n\n@mixin mat-sort-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-sort-header-arrow {\n    $table-background: mat-color($background, 'card');\n    $text-color: mat-color($foreground, secondary-text);\n\n    // Because the arrow is made up of multiple elements that are stacked on top of each other,\n    // we can't use the semi-trasparent color from the theme directly. If the value is a color\n    // *type*, we convert it into a solid color by taking the opacity from the rgba value and\n    // using the value to determine the percentage of the background to put into foreground\n    // when mixing the colors together. Otherwise, if it resolves to something different\n    // (e.g. it resolves to a CSS variable), we use the color directly.\n    @if (type-of($table-background) == color and type-of($text-color) == color) {\n      $text-opacity: opacity($text-color);\n      color: mix($table-background, rgba($text-color, 1), (1 - $text-opacity) * 100%);\n    }\n    @else {\n      color: $text-color;\n    }\n  }\n}\n\n@mixin mat-sort-typography($config) { }\n\n\n\n\n\n@mixin mat-tabs-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n  $header-border: 1px solid mat-color($foreground, divider);\n\n  .mat-tab-nav-bar,\n  .mat-tab-header {\n    border-bottom: $header-border;\n  }\n\n  .mat-tab-group-inverted-header {\n    .mat-tab-nav-bar,\n    .mat-tab-header {\n      border-top: $header-border;\n      border-bottom: none;\n    }\n  }\n\n  .mat-tab-label, .mat-tab-link {\n    color: mat-color($foreground, text);\n\n    &.mat-tab-disabled {\n      color: mat-color($foreground, disabled-text);\n    }\n  }\n\n  .mat-tab-header-pagination-chevron {\n    border-color: mat-color($foreground, text);\n  }\n\n  .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n    border-color: mat-color($foreground, disabled-text);\n  }\n\n  // Remove header border when there is a background color\n  .mat-tab-group[class*='mat-background-'] .mat-tab-header,\n  .mat-tab-nav-bar[class*='mat-background-'] {\n    border-bottom: none;\n    border-top: none;\n  }\n\n  .mat-tab-group, .mat-tab-nav-bar {\n    $theme-colors: (\n      primary: $primary,\n      accent: $accent,\n      warn: $warn\n    );\n\n    @each $name, $color in $theme-colors {\n      // Set the foreground color of the tabs\n      &.mat-#{$name} {\n        @include _mat-tab-label-focus($color);\n        @include _mat-ink-bar($color);\n\n        // Override ink bar when background color is the same\n        &.mat-background-#{$name} {\n          @include _mat-ink-bar($color, default-contrast);\n        }\n      }\n    }\n\n    @each $name, $color in $theme-colors {\n      // Set background color of the tabs and override focus color\n      &.mat-background-#{$name} {\n        @include _mat-tab-label-focus($color);\n        @include _mat-tabs-background($color);\n      }\n    }\n  }\n}\n\n@mixin _mat-ink-bar($color, $hue: default) {\n  .mat-ink-bar {\n    background-color: mat-color($color, $hue);\n  }\n}\n\n@mixin _mat-tab-label-focus($tab-focus-color) {\n  .mat-tab-label,\n  .mat-tab-link {\n    &.cdk-keyboard-focused,\n    &.cdk-program-focused {\n      &:not(.mat-tab-disabled) {\n        background-color: mat-color($tab-focus-color, lighter, 0.3);\n      }\n    }\n  }\n}\n\n@mixin _mat-tabs-background($background-color) {\n  // Set background color for the tab group\n  .mat-tab-header, .mat-tab-links, .mat-tab-header-pagination {\n    background-color: mat-color($background-color);\n  }\n\n  // Set labels to contrast against background\n  .mat-tab-label, .mat-tab-link {\n    color: mat-color($background-color, default-contrast);\n\n    &.mat-tab-disabled {\n      color: mat-color($background-color, default-contrast, 0.4);\n    }\n  }\n\n  // Set pagination chevrons to contrast background\n  .mat-tab-header-pagination-chevron {\n    border-color: mat-color($background-color, default-contrast);\n  }\n\n  .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n    border-color: mat-color($background-color, default-contrast, 0.4);\n  }\n\n  // Set ripples color to be the contrast color of the new background. Otherwise the ripple\n  // color will be based on the app background color.\n  .mat-ripple-element {\n    background-color: mat-color($background-color, default-contrast, 0.12);\n  }\n}\n\n@mixin mat-tabs-typography($config) {\n  .mat-tab-group {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-tab-label, .mat-tab-link {\n    font: {\n      family: mat-font-family($config, button);\n      size: mat-font-size($config, button);\n      weight: mat-font-weight($config, button);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin _mat-toolbar-color($palette) {\n  background: mat-color($palette);\n  color: mat-color($palette, default-contrast);\n}\n\n@mixin _mat-toolbar-form-field-overrides {\n  .mat-form-field-underline,\n  .mat-form-field-ripple,\n  .mat-focused .mat-form-field-ripple {\n    background-color: currentColor;\n  }\n\n  .mat-form-field-label,\n  .mat-focused .mat-form-field-label,\n  .mat-select-value,\n  .mat-select-arrow,\n  .mat-form-field.mat-focused .mat-select-arrow {\n    color: inherit;\n  }\n\n  .mat-input-element {\n    caret-color: currentColor;\n  }\n}\n\n@mixin mat-toolbar-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-toolbar {\n    background: mat-color($background, app-bar);\n    color: mat-color($foreground, text);\n\n    &.mat-primary {\n      @include _mat-toolbar-color($primary);\n    }\n\n    &.mat-accent {\n      @include _mat-toolbar-color($accent);\n    }\n\n    &.mat-warn {\n      @include _mat-toolbar-color($warn);\n    }\n\n    @include _mat-toolbar-form-field-overrides;\n  }\n}\n\n@mixin mat-toolbar-typography($config) {\n  .mat-toolbar,\n  .mat-toolbar h1,\n  .mat-toolbar h2,\n  .mat-toolbar h3,\n  .mat-toolbar h4,\n  .mat-toolbar h5,\n  .mat-toolbar h6 {\n    @include mat-typography-level-to-styles($config, title);\n    margin: 0;\n  }\n}\n\n\n\n\n\n$mat-tooltip-target-height: 22px;\n$mat-tooltip-font-size: 10px;\n$mat-tooltip-vertical-padding: ($mat-tooltip-target-height - $mat-tooltip-font-size) / 2;\n\n$mat-tooltip-handset-target-height: 30px;\n$mat-tooltip-handset-font-size: 14px;\n$mat-tooltip-handset-vertical-padding:\n    ($mat-tooltip-handset-target-height - $mat-tooltip-handset-font-size) / 2;\n\n@mixin mat-tooltip-theme($theme) {\n  .mat-tooltip {\n    background: mat-color($mat-grey, 700, 0.9);\n  }\n}\n\n@mixin mat-tooltip-typography($config) {\n  .mat-tooltip {\n    font-family: mat-font-family($config);\n    font-size: $mat-tooltip-font-size;\n    padding-top: $mat-tooltip-vertical-padding;\n    padding-bottom: $mat-tooltip-vertical-padding;\n  }\n\n  .mat-tooltip-handset {\n    font-size: $mat-tooltip-handset-font-size;\n    padding-top: $mat-tooltip-handset-vertical-padding;\n    padding-bottom: $mat-tooltip-handset-vertical-padding;\n  }\n}\n\n\n\n\n\n@mixin mat-snack-bar-theme($theme) {\n  $is-dark-theme: map-get($theme, is-dark);\n  $accent: map-get($theme, accent);\n\n  .mat-snack-bar-container {\n    // Use the primary text on the dark theme, even though the lighter one uses\n    // a secondary, because the contrast on the light primary text is poor.\n    color: if($is-dark-theme, $dark-primary-text, $light-secondary-text);\n    background: if($is-dark-theme, map-get($mat-grey, 50), #323232);\n\n    @include _mat-theme-elevation(6, $theme);\n  }\n\n  .mat-simple-snackbar-action {\n    color: if($is-dark-theme, inherit, mat-color($accent, text));\n  }\n}\n\n@mixin mat-snack-bar-typography($config) {\n  .mat-simple-snackbar {\n    font: {\n      family: mat-font-family($config, body-1);\n      size: mat-font-size($config, body-1);\n    }\n  }\n\n  .mat-simple-snackbar-action {\n    line-height: 1;\n    font: {\n      family: inherit;\n      size: inherit;\n      weight: mat-font-weight($config, button);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Theme styles that only apply to the fill appearance of the form-field.\n\n@mixin mat-form-field-fill-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  $fill-background: mat-color($foreground, base, if($is-dark-theme, 0.1, 0.04));\n  $fill-disabled-background: mat-color($foreground, base, if($is-dark-theme, 0.05, 0.02));\n  $underline-color: mat-color($foreground, divider, if($is-dark-theme, 0.5, 0.42));\n  $label-disabled-color: mat-color($foreground, disabled-text);\n\n  .mat-form-field-appearance-fill {\n    .mat-form-field-flex {\n      background-color: $fill-background;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-flex {\n      background-color: $fill-disabled-background;\n    }\n\n    .mat-form-field-underline::before {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled {\n      .mat-form-field-label {\n        color: $label-disabled-color;\n      }\n\n      .mat-form-field-underline::before {\n        background-color: transparent;\n      }\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-fill-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-fill-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-fill-dedupe)\n             scale($font-scale);\n  width: 100% / $font-scale + $mat-form-field-fill-dedupe;\n\n  $mat-form-field-fill-dedupe: $mat-form-field-fill-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-fill-typography($config) {\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The padding on top of the infix.\n  $infix-padding-top: 0.25em;\n  // The padding below the infix.\n  $infix-padding-bottom: 0.75em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // The amount we offset the label from the input text in the fill appearance.\n  $fill-appearance-label-offset: -0.5em;\n\n  .mat-form-field-appearance-fill {\n    .mat-form-field-infix {\n      padding: $infix-padding-top 0 $infix-padding-bottom 0;\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding-top;\n      margin-top: $fill-appearance-label-offset;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _mat-form-field-fill-label-floating(\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\n                $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-fill-label-floating(\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\n                $infix-margin-top);\n      }\n    }\n  }\n}\n\n\n\n\n\n\n\n// Theme styles that only apply to the legacy appearance of the form-field.\n\n@mixin mat-form-field-legacy-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  $label-color: mat-color($foreground, secondary-text);\n  $underline-color: mat-color($foreground, divider, if($is-dark-theme, 0.7, 0.42));\n\n  .mat-form-field-appearance-legacy {\n    .mat-form-field-label {\n      color: $label-color;\n    }\n\n    .mat-hint {\n      color: $label-color;\n    }\n\n    .mat-form-field-underline {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-underline {\n      @include mat-control-disabled-underline($underline-color);\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-legacy-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-legacy-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  // We use perspective to fix the text blurriness as described here:\n  // http://www.useragentman.com/blog/2014/05/04/fixing-typography-inside-of-2-d-css-transforms/\n  // This results in a small jitter after the label floats on Firefox, which the\n  // translateZ fixes.\n  transform: translateY(-$infix-margin-top - $infix-padding) scale($font-scale) perspective(100px)\n  translateZ(0.001px + $mat-form-field-legacy-dedupe);\n  // The tricks above used to smooth out the animation on chrome and firefox actually make things\n  // worse on IE, so we don't include them in the IE version.\n  -ms-transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-legacy-dedupe)\n                  scale($font-scale);\n\n  width: 100% / $font-scale + $mat-form-field-legacy-dedupe;\n\n  $mat-form-field-legacy-dedupe: $mat-form-field-legacy-dedupe + 0.00001 !global;\n}\n\n// Same as mixin above, but omits the translateZ for printing purposes.\n@mixin _mat-form-field-legacy-label-floating-print($font-scale, $infix-padding, $infix-margin-top) {\n  // This results in a small jitter after the label floats on Firefox, which the\n  // translateZ fixes.\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-legacy-dedupe)\n                  scale($font-scale);\n  // The tricks above used to smooth out the animation on chrome and firefox actually make things\n  // worse on IE, so we don't include them in the IE version.\n  $mat-form-field-legacy-dedupe: $mat-form-field-legacy-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-legacy-typography($config) {\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The amount of space between the top of the line and the top of the actual text\n  // (as a fraction of the font-size).\n  $line-spacing: ($line-height - 1) / 2;\n  // The padding on the infix. Mocks show half of the text size, but seem to measure from the edge\n  // of the text itself, not the edge of the line; therefore we subtract off the line spacing.\n  $infix-padding: 0.5em - $line-spacing;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size. We again need to subtract off the line spacing since the mocks measure to the edge of the\n  // text, not the  edge of the line.\n  $subscript-margin-top: 0.5em / $subscript-font-scale - ($line-spacing * 2);\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n\n  .mat-form-field-appearance-legacy {\n    .mat-form-field-wrapper {\n      padding-bottom: $wrapper-padding-bottom;\n    }\n\n    .mat-form-field-infix {\n      padding: $infix-padding 0;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _mat-form-field-legacy-label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n\n      // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\n      .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-legacy-label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-legacy-label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding;\n    }\n\n    .mat-form-field-underline {\n      // We want the underline to start at the end of the content box, not the padding box,\n      // so we move it up by the padding amount.\n      bottom: $wrapper-padding-bottom;\n    }\n\n    .mat-form-field-subscript-wrapper {\n      margin-top: $subscript-margin-top;\n\n      // We want the subscript to start at the end of the content box, not the padding box,\n      // so we move it up by the padding amount (adjusted for the smaller font size);\n      top: calc(100% - #{$wrapper-padding-bottom / $subscript-font-scale});\n    }\n  }\n\n  // translateZ causes the label to not appear while printing, so we override it to not\n  // apply translateZ while printing\n  @media print {\n    .mat-form-field-appearance-legacy {\n      &.mat-form-field-can-float {\n        &.mat-form-field-should-float .mat-form-field-label,\n        .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n          @include _mat-form-field-legacy-label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n\n        // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\n        .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n          @include _mat-form-field-legacy-label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n\n        // Server-side rendered matInput with a label attribute but label not shown\n        // (used as a pure CSS stand-in for mat-form-field-should-float).\n        .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n          @include _mat-form-field-legacy-label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n      }\n    }\n  }\n}\n\n\n\n\n\n\n\n// Theme styles that only apply to the outline appearance of the form-field.\n\n@mixin mat-form-field-outline-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  $label-disabled-color: mat-color($foreground, disabled-text);\n  $outline-color: mat-color($foreground, divider, if($is-dark-theme, 0.3, 0.12));\n  $outline-color-hover: mat-color($foreground, divider, if($is-dark-theme, 1, 0.87));\n  $outline-color-primary: mat-color($primary);\n  $outline-color-accent: mat-color($accent);\n  $outline-color-warn: mat-color($warn);\n  $outline-color-disabled: mat-color($foreground, divider, if($is-dark-theme, 0.15, 0.06));\n\n  .mat-form-field-appearance-outline {\n    .mat-form-field-outline {\n      color: $outline-color;\n    }\n\n    .mat-form-field-outline-thick {\n      color: $outline-color-hover;\n    }\n\n    &.mat-focused {\n      .mat-form-field-outline-thick {\n        color: $outline-color-primary;\n      }\n\n      &.mat-accent .mat-form-field-outline-thick {\n        color: $outline-color-accent;\n      }\n\n      &.mat-warn .mat-form-field-outline-thick {\n        color: $outline-color-warn;\n      }\n    }\n\n    // Class repeated so that rule is specific enough to override focused accent color case.\n    &.mat-form-field-invalid.mat-form-field-invalid {\n      .mat-form-field-outline-thick {\n        color: $outline-color-warn;\n      }\n    }\n\n    &.mat-form-field-disabled {\n      .mat-form-field-label {\n        color: $label-disabled-color;\n      }\n\n      .mat-form-field-outline {\n        color: $outline-color-disabled;\n      }\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-outline-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-outline-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-outline-dedupe)\n  scale($font-scale);\n  width: 100% / $font-scale + $mat-form-field-outline-dedupe;\n\n  $mat-form-field-outline-dedupe: $mat-form-field-outline-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-outline-typography($config) {\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The padding above and below the infix.\n  $infix-padding: 1em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size.\n  $subscript-margin-top: 0.5em / $subscript-font-scale;\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n  // The amount we offset the label from the input text in the outline appearance.\n  $outline-appearance-label-offset: -0.25em;\n\n  .mat-form-field-appearance-outline {\n    .mat-form-field-infix {\n      padding: $infix-padding 0 $infix-padding 0;\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding;\n      margin-top: $outline-appearance-label-offset;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _mat-form-field-outline-label-floating(\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\n                $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-outline-label-floating(\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\n                $infix-margin-top);\n      }\n    }\n  }\n}\n\n\n\n\n\n\n\n// Theme styles that only apply to the standard appearance of the form-field.\n\n@mixin mat-form-field-standard-theme($theme) {\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  $underline-color: mat-color($foreground, divider, if($is-dark-theme, 0.7, 0.42));\n\n  .mat-form-field-appearance-standard {\n    .mat-form-field-underline {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-underline {\n      @include mat-control-disabled-underline($underline-color);\n    }\n  }\n}\n\n@mixin mat-form-field-standard-typography($config) {}\n\n\n// Theme styles that apply to all appearances of the form-field.\n@mixin mat-form-field-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n  $is-dark-theme: map-get($theme, is-dark);\n\n  // Label colors. Required is used for the `*` star shown in the label.\n  $label-color: mat-color($foreground, secondary-text, if($is-dark-theme, 0.7, 0.6));\n  $focused-label-color: mat-color($primary, text);\n  $required-label-color: mat-color($accent, text);\n\n  // Underline colors.\n  $underline-color-base: mat-color($foreground, divider, if($is-dark-theme, 1, 0.87));\n  $underline-color-accent: mat-color($accent, text);\n  $underline-color-warn: mat-color($warn, text);\n  $underline-focused-color: mat-color($primary, text);\n\n  .mat-form-field-label {\n    color: $label-color;\n  }\n\n  .mat-hint {\n    color: $label-color;\n  }\n\n  .mat-form-field.mat-focused .mat-form-field-label {\n    color: $focused-label-color;\n\n    &.mat-accent {\n      color: $underline-color-accent;\n    }\n\n    &.mat-warn {\n      color: $underline-color-warn;\n    }\n  }\n\n  .mat-focused .mat-form-field-required-marker {\n    color: $required-label-color;\n  }\n\n  .mat-form-field-ripple {\n    background-color: $underline-color-base;\n  }\n\n  .mat-form-field.mat-focused {\n    .mat-form-field-ripple {\n      background-color: $underline-focused-color;\n\n      &.mat-accent {\n        background-color: $underline-color-accent;\n      }\n\n      &.mat-warn {\n        background-color: $underline-color-warn;\n      }\n    }\n  }\n\n  .mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid) {\n    .mat-form-field-infix::after {\n      color: $underline-focused-color;\n    }\n\n    &.mat-accent .mat-form-field-infix::after {\n      color: $underline-color-accent;\n    }\n\n    &.mat-warn .mat-form-field-infix::after {\n      color: $underline-color-warn;\n    }\n  }\n\n  // Styling for the error state of the form field. Note that while the same can be\n  // achieved with the ng-* classes, we use this approach in order to ensure that the same\n  // logic is used to style the error state and to show the error messages.\n  .mat-form-field.mat-form-field-invalid {\n    .mat-form-field-label {\n      color: $underline-color-warn;\n\n      &.mat-accent,\n      .mat-form-field-required-marker {\n        color: $underline-color-warn;\n      }\n    }\n\n    .mat-form-field-ripple,\n    .mat-form-field-ripple.mat-accent {\n      background-color: $underline-color-warn;\n    }\n  }\n\n  .mat-error {\n    color: $underline-color-warn;\n  }\n\n  @include mat-form-field-legacy-theme($theme);\n  @include mat-form-field-standard-theme($theme);\n  @include mat-form-field-fill-theme($theme);\n  @include mat-form-field-outline-theme($theme);\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-dedupe)\n             scale($font-scale);\n  width: 100% / $font-scale + $mat-form-field-dedupe;\n\n  $mat-form-field-dedupe: $mat-form-field-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-typography($config) {\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The amount to scale the font for the prefix and suffix icons.\n  $prefix-suffix-icon-font-scale: 1.5;\n\n  // The padding on the infix. Mocks show half of the text size.\n  $infix-padding: 0.5em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // Font size to use for the label and subscript text.\n  $subscript-font-size: $subscript-font-scale * 100%;\n  // Font size to use for the for the prefix and suffix icons.\n  $prefix-suffix-icon-font-size: $prefix-suffix-icon-font-scale * 100%;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size.\n  $subscript-margin-top: 0.5em / $subscript-font-scale;\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n\n  .mat-form-field {\n    @include mat-typography-level-to-styles($config, input);\n  }\n\n  .mat-form-field-wrapper {\n    padding-bottom: $wrapper-padding-bottom;\n  }\n\n  .mat-form-field-prefix,\n  .mat-form-field-suffix {\n    // Allow icons in a prefix or suffix to adapt to the correct size.\n    .mat-icon {\n      font-size: $prefix-suffix-icon-font-size;\n      line-height: $line-height;\n    }\n\n    // Allow icon buttons in a prefix or suffix to adapt to the correct size.\n    .mat-icon-button {\n      height: $prefix-suffix-icon-font-scale * 1em;\n      width: $prefix-suffix-icon-font-scale * 1em;\n\n      .mat-icon {\n        height: $line-height * 1em;\n        line-height: $line-height;\n      }\n    }\n  }\n\n  .mat-form-field-infix {\n    padding: $infix-padding 0;\n    // Throws off the baseline if we do it as a real margin, so we do it as a border instead.\n    border-top: $infix-margin-top solid transparent;\n  }\n\n  .mat-form-field-can-float {\n    &.mat-form-field-should-float .mat-form-field-label,\n    .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n      @include _mat-form-field-label-floating(\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\n    }\n\n    // Server-side rendered matInput with a label attribute but label not shown\n    // (used as a pure CSS stand-in for mat-form-field-should-float).\n    .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n      @include _mat-form-field-label-floating(\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\n    }\n  }\n\n  .mat-form-field-label-wrapper {\n    top: -$infix-margin-top;\n    padding-top: $infix-margin-top;\n  }\n\n  .mat-form-field-label {\n    top: $infix-margin-top + $infix-padding;\n  }\n\n  .mat-form-field-underline {\n    // We want the underline to start at the end of the content box, not the padding box,\n    // so we move it up by the padding amount.\n    bottom: $wrapper-padding-bottom;\n  }\n\n  .mat-form-field-subscript-wrapper {\n    font-size: $subscript-font-size;\n    margin-top: $subscript-margin-top;\n\n    // We want the subscript to start at the end of the content box, not the padding box,\n    // so we move it up by the padding amount (adjusted for the smaller font size);\n    top: calc(100% - #{$wrapper-padding-bottom / $subscript-font-scale});\n  }\n\n  @include mat-form-field-legacy-typography($config);\n  @include mat-form-field-standard-typography($config);\n  @include mat-form-field-fill-typography($config);\n  @include mat-form-field-outline-typography($config);\n}\n\n\n\n\n\n@mixin mat-tree-theme($theme) {\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  .mat-tree {\n    background: mat-color($background, 'card');\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-tree-typography($config) {\n  .mat-tree {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    font-weight: mat-font-weight($config, body-1);\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n\n\n// Includes all of the typographic styles.\n@mixin angular-material-typography($config: null) {\n  @if $config == null {\n    $config: mat-typography-config();\n  }\n\n  @include mat-badge-typography($config);\n  @include mat-base-typography($config);\n  @include mat-autocomplete-typography($config);\n  @include mat-bottom-sheet-typography($config);\n  @include mat-button-typography($config);\n  @include mat-button-toggle-typography($config);\n  @include mat-card-typography($config);\n  @include mat-checkbox-typography($config);\n  @include mat-chips-typography($config);\n  @include mat-table-typography($config);\n  @include mat-datepicker-typography($config);\n  @include mat-dialog-typography($config);\n  @include mat-expansion-panel-typography($config);\n  @include mat-form-field-typography($config);\n  @include mat-grid-list-typography($config);\n  @include mat-icon-typography($config);\n  @include mat-input-typography($config);\n  @include mat-menu-typography($config);\n  @include mat-paginator-typography($config);\n  @include mat-progress-bar-typography($config);\n  @include mat-progress-spinner-typography($config);\n  @include mat-radio-typography($config);\n  @include mat-select-typography($config);\n  @include mat-sidenav-typography($config);\n  @include mat-slide-toggle-typography($config);\n  @include mat-slider-typography($config);\n  @include mat-stepper-typography($config);\n  @include mat-sort-typography($config);\n  @include mat-tabs-typography($config);\n  @include mat-toolbar-typography($config);\n  @include mat-tooltip-typography($config);\n  @include mat-list-typography($config);\n  @include mat-option-typography($config);\n  @include mat-optgroup-typography($config);\n  @include mat-snack-bar-typography($config);\n  @include mat-tree-typography($config);\n}\n\n\n// Mixin that renders all of the core styles that are not theme-dependent.\n@mixin mat-core($typography-config: null) {\n  @include angular-material-typography($typography-config);\n  @include mat-ripple();\n  @include cdk-a11y();\n  @include cdk-overlay();\n  @include cdk-text-field();\n}\n\n// Mixin that renders all of the core styles that depend on the theme.\n@mixin mat-core-theme($theme) {\n  @include mat-ripple-theme($theme);\n  @include mat-option-theme($theme);\n  @include mat-optgroup-theme($theme);\n  @include mat-pseudo-checkbox-theme($theme);\n\n  // Provides external CSS classes for each elevation value. Each CSS class is formatted as\n  // `mat-elevation-z$zValue` where `$zValue` corresponds to the z-space to which the element is\n  // elevated.\n  @for $zValue from 0 through 24 {\n    .#{$_mat-elevation-prefix}#{$zValue} {\n      @include _mat-theme-elevation($zValue, $theme);\n    }\n  }\n\n  // Wrapper element that provides the theme background when the user's content isn't\n  // inside of a `mat-sidenav-container`. Note that we need to exclude the ampersand\n  // selector in case the mixin is included at the top level.\n  .mat-app-background#{if(&, ', &.mat-app-background', '')} {\n    $background: map-get($theme, background);\n    $foreground: map-get($theme, foreground);\n\n    background-color: mat-color($background, background);\n    color: mat-color($foreground, text);\n  }\n\n  // Marker that is used to determine whether the user has added a theme to their page.\n  @at-root {\n    .mat-theme-loaded-marker {\n      display: none;\n    }\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@mixin mat-divider-theme($theme) {\n  $foreground: map-get($theme, foreground);\n\n  .mat-divider {\n    border-top-color: mat-color($foreground, divider);\n  }\n\n  .mat-divider-vertical {\n    border-right-color: mat-color($foreground, divider);\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Create a theme.\n@mixin angular-material-theme($theme) {\n  @include mat-core-theme($theme);\n  @include mat-autocomplete-theme($theme);\n  @include mat-badge-theme($theme);\n  @include mat-bottom-sheet-theme($theme);\n  @include mat-button-theme($theme);\n  @include mat-button-toggle-theme($theme);\n  @include mat-card-theme($theme);\n  @include mat-checkbox-theme($theme);\n  @include mat-chips-theme($theme);\n  @include mat-table-theme($theme);\n  @include mat-datepicker-theme($theme);\n  @include mat-dialog-theme($theme);\n  @include mat-divider-theme($theme);\n  @include mat-expansion-panel-theme($theme);\n  @include mat-form-field-theme($theme);\n  @include mat-grid-list-theme($theme);\n  @include mat-icon-theme($theme);\n  @include mat-input-theme($theme);\n  @include mat-list-theme($theme);\n  @include mat-menu-theme($theme);\n  @include mat-paginator-theme($theme);\n  @include mat-progress-bar-theme($theme);\n  @include mat-progress-spinner-theme($theme);\n  @include mat-radio-theme($theme);\n  @include mat-select-theme($theme);\n  @include mat-sidenav-theme($theme);\n  @include mat-slide-toggle-theme($theme);\n  @include mat-slider-theme($theme);\n  @include mat-stepper-theme($theme);\n  @include mat-sort-theme($theme);\n  @include mat-tabs-theme($theme);\n  @include mat-toolbar-theme($theme);\n  @include mat-tooltip-theme($theme);\n  @include mat-tree-theme($theme);\n  @include mat-snack-bar-theme($theme);\n}\n",null,"@import \"variables\";\r\n\r\nbody, html {\r\n  -webkit-font-smoothing: antialiased;\r\n  -webkit-tap-highlight-color: transparent;\r\n  -webkit-touch-callout: none;\r\n  -webkit-text-size-adjust: 100%;\r\n  -ms-text-size-adjust: 100%;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  width: 100%;\r\n  position: relative;\r\n  box-sizing: border-box;\r\n}\r\n\r\nhtml {\r\n  font-size: 62.5%;\r\n  touch-action: manipulation;\r\n}\r\n\r\nbody {\r\n  font-family: $font-family;\r\n  color: mat-color($app-foreground, text);\r\n  background-color: mat-color($app-background, dialog);\r\n  line-height: 1.42857143;\r\n  font-size: 1.4rem;\r\n  margin: 0;\r\n}\r\n\r\n//box-sizing\r\nbody {\r\n  box-sizing: inherit;\r\n\r\n  *, *:before, *:after {\r\n    box-sizing: inherit;\r\n  }\r\n}\r\n\r\n.be-fullscreen-overlay-scrollblock {\r\n  width: 100%;\r\n  position: fixed;\r\n}","@import \"variables\";\r\n\r\n.scroll-container, .scroll-container-x {\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n\r\n  &.ps {\r\n    position: relative;\r\n    overflow: hidden;\r\n  }\r\n}\r\n\r\n.scroll-container-x {\r\n  overflow-y: hidden;\r\n  overflow-x: auto;\r\n}\r\n\r\nimg {\r\n  display: block;\r\n}\r\n\r\n.block {\r\n  display: block;\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n  color: mat-color($app-foreground, link);\r\n\r\n  &.hover-underline {\r\n    color: inherit;\r\n\r\n    &:hover {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n}\r\n\r\nh1,h2,h3,h4,h5 {\r\n  font-weight: 500;\r\n}\r\n\r\nul, ol {\r\n  list-style: none;\r\n  padding-left: 0;\r\n  margin: 0;\r\n}\r\n\r\nstrong {\r\n  font-weight: 500;\r\n}\r\n\r\nfieldset {\r\n  border: 0;\r\n  padding: 0;\r\n  margin: 0;\r\n  min-width: 0;\r\n}\r\n\r\nlegend {\r\n  padding: 0 0 5px 0;\r\n}\r\n\r\n.hidden {\r\n  display: none !important;\r\n  visibility: hidden;\r\n}\r\n\r\n.visually-hidden {\r\n  visibility: hidden;\r\n  pointer-events: none;\r\n}\r\n\r\n.error {\r\n  color: mat-color($app-warn);\r\n\r\n  &.margin-bottom {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  &.margin-top {\r\n    margin-top: 20px;\r\n  }\r\n}\r\n\r\n//fix file dropzone firing \"dragleave\" event when hovering its child\r\n.file-over-dropzone * {\r\n  pointer-events: none !important;\r\n}\r\n\r\n.material-panel {\r\n  border: $admin-card-border;\r\n  box-shadow: $admin-card-box-shadow;\r\n  border-top-left-radius: 4px;\r\n  border-top-right-radius: 4px;\r\n  background-color: mat-color($app-background, card);\r\n  padding: 15px;\r\n}","@import \"variables\";\r\n\r\n.no-results-message {\r\n  width: 100%;\r\n  max-height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-flow: column wrap;\r\n  font-weight: 300;\r\n\r\n  &.horizontal {\r\n    flex-flow: row-reverse nowrap;\r\n\r\n    .icon {\r\n      width: 40px;\r\n      height: 40px;\r\n      margin-top: 0;\r\n      margin-right: 15px;\r\n    }\r\n\r\n    .main {\r\n      font-size: 1.4rem;\r\n      text-align: left;\r\n      margin-bottom: 0;\r\n    }\r\n\r\n    .secondary {\r\n      font-size: 1.4rem;\r\n    }\r\n  }\r\n\r\n  .text {\r\n    opacity: 0.75;\r\n  }\r\n\r\n  .icon {\r\n    width: 150px;\r\n    height: 150px;\r\n    fill: currentColor;\r\n    margin-top: 25px;\r\n  }\r\n\r\n  .main {\r\n    font-size: 2.6rem;\r\n    font-weight: 500;\r\n    text-align: center;\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  .secondary {\r\n    font-size: 1.7rem;\r\n    font-weight: 400;\r\n    text-align: center;\r\n    max-width: 450px;\r\n  }\r\n}","@import \"variables\";\r\n\r\nbutton.no-style {\r\n  background: none;\r\n  border: 0;\r\n  color: inherit;\r\n  font: inherit;\r\n  line-height: normal;\r\n  overflow: visible;\r\n  padding: 0;\r\n  border-radius: 0;\r\n  min-width: initial;\r\n  -webkit-user-select: none; /* for button */\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n  text-align: initial;\r\n}\r\n\r\n.mat-flat-button.mat-gray {\r\n  background-color: mat-color($app-background, unselected-chip);\r\n  color: mat-color($app-foreground, text);\r\n}","@import \"variables\";\r\n\r\n.menu-with-alt-text {\r\n  width: 320px;\r\n\r\n  .mat-menu-item {\r\n    display: flex;\r\n  }\r\n\r\n  .alt-text {\r\n    margin-left: auto;\r\n    color: mat-color($app-foreground, secondary-text);\r\n    font-size: 13px;\r\n  }\r\n}","@import \"variables\";\r\n\r\n.tox-tinymce.tox {\r\n  border: none;\r\n  flex: 1 1 auto;\r\n\r\n  .tox-edit-area {\r\n    border: none;\r\n  }\r\n\r\n  .tox-panel {\r\n    background-color: mat-color($app-background, background);\r\n    border-bottom: 1px solid mat-color($app-foreground, divider);\r\n    padding: 0;\r\n  }\r\n}","@import \"variables\";\r\n\r\n.input-container {\r\n  display: block;\r\n  width: 100%;\r\n\r\n  &.has-error {\r\n    input, select, textarea, .fake-input {\r\n      border-color: mat-color($app-warn);\r\n    }\r\n\r\n    label {\r\n      color: mat-color($app-warn);\r\n    }\r\n  }\r\n\r\n  .error {\r\n    margin-top: 6px;\r\n    color: mat-color($app-warn);\r\n  }\r\n\r\n  p {\r\n    color: mat-color($app-foreground, secondary-text);\r\n    font-size: 13px;\r\n  }\r\n\r\n  label, .fake-label {\r\n    color: mat-color($app-foreground, label);\r\n    display: block;\r\n    padding-bottom: 5px;\r\n  }\r\n\r\n  input, select, textarea, .fake-input {\r\n    display: block;\r\n    width: 100%;\r\n    height: $input-height;\r\n    color: inherit;\r\n    border: 1px solid mat-color($app-foreground, divider);\r\n    padding: $input-padding;\r\n    margin: 0;\r\n    outline-width: 1px;\r\n    line-height: normal;\r\n    font-size: 14px;\r\n    font-family: inherit;\r\n    background-color: transparent;\r\n    box-sizing: border-box;\r\n    border-radius: 4px;\r\n\r\n    @include input-placeholder {\r\n      color: mat-color($app-foreground, disabled-button-text);\r\n    }\r\n\r\n    &:invalid {\r\n      box-shadow: none;\r\n    }\r\n\r\n    &:disabled {\r\n      opacity: 0.6;\r\n    }\r\n\r\n    &[readonly] {\r\n      cursor: pointer;\r\n      opacity: 0.9;\r\n    }\r\n  }\r\n\r\n  option {\r\n    color: rgba(0, 0, 0, 0.87);\r\n  }\r\n\r\n  // fix for firefox \"file\" input\r\n  input[type=\"file\"] {\r\n    height: auto;\r\n  }\r\n\r\n  textarea {\r\n    height: auto;\r\n    padding: 10px;\r\n  }\r\n\r\n  .input-with-action {\r\n    display: flex;\r\n\r\n    input {\r\n      flex: 1;\r\n    }\r\n\r\n    &:not(.action-left) {\r\n      input {\r\n        border-top-right-radius: 0;\r\n        border-bottom-right-radius: 0;\r\n        border-right: none;\r\n      }\r\n\r\n      .mat-flat-button, .input-action {\r\n        border-top-left-radius: 0;\r\n        border-bottom-left-radius: 0;\r\n      }\r\n    }\r\n\r\n    &.action-left {\r\n      input {\r\n        border-top-left-radius: 0;\r\n        border-bottom-left-radius: 0;\r\n        border-left: none;\r\n      }\r\n\r\n      .mat-flat-button, .input-action {\r\n        border-top-right-radius: 0;\r\n        border-bottom-right-radius: 0;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.inline-inputs-container {\r\n  display: flex;\r\n\r\n  .input-container {\r\n    margin-right: 15px;\r\n    flex: 1 1 auto;\r\n\r\n    &:last-child {\r\n      margin-right: 0;\r\n    }\r\n  }\r\n}\r\n\r\n.many-inputs {\r\n  > .input-container {\r\n    margin-bottom: 20px;\r\n  }\r\n}","@import \"variables\";\r\n\r\n$close-button-size: 24px;\r\n\r\n.be-modal {\r\n  // width: $modal-default-width;\r\n  \r\n  .dialog-loading-bar {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n  }\r\n\r\n  .mat-dialog-container {\r\n    position: relative;\r\n  }\r\n\r\n  .modal-header {\r\n    display: flex;\r\n    align-items: center;\r\n    position: relative;\r\n    margin: 0 0 35px;\r\n\r\n    h2 {\r\n      font-size: 1.6rem;\r\n      font-weight: 500;\r\n      opacity: 0.8;\r\n      flex: 1 1 auto;\r\n      margin: 0;\r\n      line-height: 30px;\r\n    }\r\n  }\r\n\r\n  .mat-dialog-content {\r\n    position: relative;\r\n    padding-top: 1px;\r\n    padding-bottom: 1px;\r\n  }\r\n\r\n  .mat-dialog-actions {\r\n    justify-content: flex-end;\r\n    padding-bottom: 16px;\r\n  }\r\n\r\n  .close-button {\r\n    flex: 0 0 $close-button-size;\r\n    width: $close-button-size;\r\n    height: $close-button-size;\r\n    line-height: $close-button-size;\r\n    color: mat-color($app-foreground, icon);\r\n    transition: transform ease 0.2s;\r\n    z-index: 999;\r\n\r\n    &:hover {\r\n      transform: rotate(90deg);\r\n    }\r\n\r\n    .mat-icon {\r\n      width: $close-button-size;\r\n      height: $close-button-size;\r\n    }\r\n  }\r\n\r\n  .errors {\r\n    color: mat-color($app-warn);\r\n\r\n    .error {\r\n      padding: 10px 0;\r\n\r\n      &:last-of-type {\r\n        margin-bottom: 20px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .no-input-error {\r\n    padding: 10px 0;\r\n    color: mat-color($app-warn);\r\n  }\r\n}","@import \"variables\";\r\n\r\n.social-icons {\r\n  &:empty {\r\n    display: none;\r\n  }\r\n\r\n  .social-icon {\r\n    width: 31px;\r\n    height: 31px;\r\n    line-height: 31px;\r\n    margin-right: 8px;\r\n    border-radius: 4px;\r\n    text-align: center;\r\n\r\n    &.facebook {\r\n      background-color: $facebook-color;\r\n      color: #fff;\r\n    }\r\n\r\n    &.twitter {\r\n      background-color: $twitter-color;\r\n      color: #fff;\r\n    }\r\n\r\n    &.google {\r\n      background-color: $google-color;\r\n      color: #fff;\r\n    }\r\n\r\n    &.mail {\r\n      background-color: $social-icon-mail-color;\r\n      color: #fff;\r\n    }\r\n\r\n    &.link {\r\n      background-color: $social-icon-link-color;\r\n      color: #fff;\r\n    }\r\n\r\n    .mat-icon {\r\n      width: 18px;\r\n      height: 18px;\r\n      line-height: 18px;\r\n      margin: 0 auto;\r\n    }\r\n  }\r\n}","@import \"variables\";\r\n$spacing: 30px;\r\n\r\n.settings-panel {\r\n  display: block;\r\n  margin-bottom: $spacing;\r\n  border: $admin-card-border;\r\n  box-shadow: $admin-card-box-shadow;\r\n  border-top-left-radius: 4px;\r\n  border-top-right-radius: 4px;\r\n  background-color: mat-color($app-background, card);\r\n  padding: ($spacing - 5px) $spacing;\r\n  position: relative;\r\n\r\n  .body {\r\n    margin: 0;\r\n  }\r\n\r\n  .header {\r\n    margin-bottom: $spacing + 10px;\r\n\r\n    .title {\r\n      font-size: 2rem;\r\n      margin-bottom: 5px;\r\n      opacity: 0.8;\r\n      text-transform: capitalize;\r\n    }\r\n\r\n    .subtitle {\r\n      font-size: 1.4rem;\r\n      color: mat-color($app-foreground, secondary-text);\r\n    }\r\n  }\r\n\r\n  .input-container {\r\n    input, select, textarea, space-input {\r\n      max-width: 400px;\r\n    }\r\n\r\n    chip-input {\r\n      max-width: 400px;\r\n\r\n      .mat-chip-list-wrapper {\r\n        border-radius: 4px;\r\n      }\r\n\r\n      input {\r\n        height: 28px;\r\n      }\r\n    }\r\n\r\n    p {\r\n      margin: 10px 0 25px;\r\n      padding: 0 1px;\r\n      max-width: 650px;\r\n    }\r\n\r\n    select {\r\n      text-transform: capitalize;\r\n    }\r\n  }\r\n\r\n  .description {\r\n    font-size: 1.3rem;\r\n  }\r\n\r\n  .margin-top {\r\n    margin-top: 35px;\r\n  }\r\n\r\n  .margin-bottom {\r\n    margin-bottom: 35px;\r\n  }\r\n\r\n  .widget {\r\n    background-color: #f3fbf7;\r\n    padding: 14px;\r\n    margin: 35px 0;\r\n    border-radius: 3px;\r\n    overflow-wrap: break-word;\r\n    border-left: 5px solid darken(#f3fbf7, 40%);\r\n    max-width: 650px;\r\n\r\n    p {\r\n      margin: 5px 0 0;\r\n      font-size: 1.5rem;\r\n      font-weight: 300;\r\n      color: rgba(0,0,0,0.87);\r\n    }\r\n\r\n    .title {\r\n      font-size: 1.6rem;\r\n      font-weight: 500;\r\n      color: #555;\r\n    }\r\n\r\n    button {\r\n      margin-top: 15px;\r\n    }\r\n\r\n    &.widget-flat {\r\n      background-color: mat-color($app-background, chip);\r\n      color: mat-color($app-foreground, text);\r\n      border: 1px solid mat-color($app-foreground, divider-lighter);\r\n    }\r\n\r\n    &.widget-important {\r\n      background-color: #fef7ed;\r\n      border-left: 5px solid darken(#fef7ed, 40%);\r\n    }\r\n\r\n    &.widget-warning {\r\n      background-color: #f2564d;\r\n      border-left: 5px solid darken(#f2564d, 40%);\r\n    }\r\n  }\r\n\r\n  .settings-separator {\r\n    background-color: var(--be-divider-lighter);\r\n    height: 1px;\r\n    margin: 25px 0;\r\n  }\r\n\r\n  .error-group {\r\n    border-top: 1px solid mat-color($app-foreground, divider-lighter);\r\n    border-bottom: 1px solid mat-color($app-foreground, divider-lighter);\r\n    padding-top: 20px;\r\n    margin-bottom: 20px;\r\n    max-width: 400px;\r\n\r\n    &.has-error {\r\n      border-color: mat-color($app-warn);\r\n\r\n      input, select, textarea {\r\n        border-color: mat-color($app-warn);\r\n      }\r\n\r\n      label {\r\n        color: mat-color($app-warn);\r\n      }\r\n    }\r\n\r\n    &.no-bottom-border {\r\n      border-bottom: none;\r\n    }\r\n\r\n    &.no-border-top {\r\n      border-top: none;\r\n      padding-top: 0;\r\n    }\r\n\r\n    &.no-spacing {\r\n      border: none;\r\n      padding: 0;\r\n      margin: 0;\r\n    }\r\n\r\n    .group-error {\r\n      margin-bottom: 10px;\r\n    }\r\n  }\r\n\r\n  .mat-progress-bar {\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n  }\r\n\r\n  .mat-tab-label {\r\n    text-transform: capitalize;\r\n  }\r\n\r\n  strong {\r\n    font-weight: 500;\r\n  }\r\n}","@import \"variables\";\r\n\r\n.auth-page {\r\n  display: flex;\r\n  height: 100vh;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: mat-color($app-background, background);\r\n\r\n  .auth-panel {\r\n    position: relative;\r\n    max-width: 90%;\r\n    width: 400px;\r\n    padding: 30px 35px;\r\n    background-color: mat-color($app-background, card);\r\n    border: 1px solid mat-color($app-foreground, divider);\r\n    border-radius: 4px;\r\n\r\n    .general-error {\r\n      padding: 8px 0;\r\n      color: mat-color($app-warn);\r\n      text-align: center;\r\n    }\r\n\r\n    .color-secondary {\r\n      color: mat-color($app-foreground, secondary-text);\r\n    }\r\n\r\n    .social-icons {\r\n      flex: 0 0 50%;\r\n      height: 36px;\r\n      padding: 3px 0 0;\r\n    }\r\n\r\n    .logo {\r\n      display: block;\r\n      width: 100%;\r\n      margin: 0 auto 30px;\r\n\r\n      img {\r\n        display: block;\r\n        margin: auto;\r\n        width: 200px;\r\n      }\r\n    }\r\n\r\n    .big-social-auth-button {\r\n      width: 100%;\r\n      text-align: center;\r\n\r\n      button {\r\n        line-height: 48px;\r\n        width: 100%;\r\n      }\r\n\r\n      svg {\r\n        display: block;\r\n      }\r\n    }\r\n\r\n    .input-container {\r\n      position: relative;\r\n\r\n      input {\r\n        font-size: 1.5rem;\r\n        font-weight: 500;\r\n        letter-spacing: .5px;\r\n        height: 47px;\r\n        padding: 6px 12px;\r\n        border: 1px solid mat-color($app-foreground, divider);\r\n        background-color: mat-color($app-background, card);\r\n        color: inherit;\r\n      }\r\n\r\n      .error {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 100%;\r\n        margin: 0;\r\n        padding: 0 20px;\r\n        white-space: nowrap;\r\n        background-color: mat-color($app-warn);\r\n        color: mat-color($app-warn, default-contrast);\r\n        line-height: 45px;\r\n        max-width: 350px;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n\r\n        @media only screen and (max-width: $medium) {\r\n          position: static;\r\n          padding: 0;\r\n          background-color: inherit;\r\n          color: mat-color($app-warn);\r\n          line-height: initial;\r\n          max-width: 100%;\r\n          margin: 8px 0 0;\r\n        }\r\n      }\r\n\r\n      .forgot-password {\r\n        cursor: pointer;\r\n        position: absolute;\r\n        right: 13px;\r\n        top: 14px;\r\n\r\n        &:hover {\r\n          color: mat-color($app-foreground, link);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}","@import \"_variables\";\r\n\r\n//always should horizontal scrollbar\r\n.ps {\r\n  position: relative;\r\n\r\n  > .ps__rail-x {\r\n    opacity: 0.6;\r\n  }\r\n}\r\n\r\n@import \"~perfect-scrollbar/css/perfect-scrollbar\";","/*\n * Container style\n */\n.ps {\n  overflow: hidden !important;\n  overflow-anchor: none;\n  -ms-overflow-style: none;\n  touch-action: auto;\n  -ms-touch-action: auto;\n}\n\n/*\n * Scrollbar rail styles\n */\n.ps__rail-x {\n  display: none;\n  opacity: 0;\n  transition: background-color .2s linear, opacity .2s linear;\n  -webkit-transition: background-color .2s linear, opacity .2s linear;\n  height: 15px;\n  /* there must be 'bottom' or 'top' for ps__rail-x */\n  bottom: 0px;\n  /* please don't change 'position' */\n  position: absolute;\n}\n\n.ps__rail-y {\n  display: none;\n  opacity: 0;\n  transition: background-color .2s linear, opacity .2s linear;\n  -webkit-transition: background-color .2s linear, opacity .2s linear;\n  width: 15px;\n  /* there must be 'right' or 'left' for ps__rail-y */\n  right: 0;\n  /* please don't change 'position' */\n  position: absolute;\n}\n\n.ps--active-x > .ps__rail-x,\n.ps--active-y > .ps__rail-y {\n  display: block;\n  background-color: transparent;\n}\n\n.ps:hover > .ps__rail-x,\n.ps:hover > .ps__rail-y,\n.ps--focus > .ps__rail-x,\n.ps--focus > .ps__rail-y,\n.ps--scrolling-x > .ps__rail-x,\n.ps--scrolling-y > .ps__rail-y {\n  opacity: 0.6;\n}\n\n.ps .ps__rail-x:hover,\n.ps .ps__rail-y:hover,\n.ps .ps__rail-x:focus,\n.ps .ps__rail-y:focus,\n.ps .ps__rail-x.ps--clicking,\n.ps .ps__rail-y.ps--clicking {\n  background-color: #eee;\n  opacity: 0.9;\n}\n\n/*\n * Scrollbar thumb styles\n */\n.ps__thumb-x {\n  background-color: #aaa;\n  border-radius: 6px;\n  transition: background-color .2s linear, height .2s ease-in-out;\n  -webkit-transition: background-color .2s linear, height .2s ease-in-out;\n  height: 6px;\n  /* there must be 'bottom' for ps__thumb-x */\n  bottom: 2px;\n  /* please don't change 'position' */\n  position: absolute;\n}\n\n.ps__thumb-y {\n  background-color: #aaa;\n  border-radius: 6px;\n  transition: background-color .2s linear, width .2s ease-in-out;\n  -webkit-transition: background-color .2s linear, width .2s ease-in-out;\n  width: 6px;\n  /* there must be 'right' for ps__thumb-y */\n  right: 2px;\n  /* please don't change 'position' */\n  position: absolute;\n}\n\n.ps__rail-x:hover > .ps__thumb-x,\n.ps__rail-x:focus > .ps__thumb-x,\n.ps__rail-x.ps--clicking .ps__thumb-x {\n  background-color: #999;\n  height: 11px;\n}\n\n.ps__rail-y:hover > .ps__thumb-y,\n.ps__rail-y:focus > .ps__thumb-y,\n.ps__rail-y.ps--clicking .ps__thumb-y {\n  background-color: #999;\n  width: 11px;\n}\n\n/* MS supports */\n@supports (-ms-overflow-style: none) {\n  .ps {\n    overflow: auto !important;\n  }\n}\n\n@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {\n  .ps {\n    overflow: auto !important;\n  }\n}\n",".selected-el-box {\r\n  border: 2px dashed #E91E63;\r\n  position: absolute;\r\n  pointer-events: none;\r\n  padding: 5px;\r\n  top: -15px;\r\n  left: -15px;\r\n}","@import \"variables\";\r\n\r\n$pagination-height: 56px;\r\n$table-header-height: 85px;\r\n\r\n.responsive-material-table {\r\n  @media screen and (max-width: $medium) {\r\n    padding: 0;\r\n    background-color: initial;\r\n    border: none;\r\n    box-shadow: none;\r\n    margin: 0;\r\n\r\n    .mat-table {\r\n      background-color: initial;\r\n      padding: 0;\r\n    }\r\n\r\n    .mat-paginator {\r\n      background-color: transparent;\r\n      margin-top: 15px;\r\n    }\r\n\r\n    .mat-paginator-page-size {\r\n      display: none;\r\n    }\r\n\r\n    .mat-header-row {\r\n      display: none;\r\n    }\r\n\r\n    .header-inner {\r\n      padding-left: 0;\r\n      padding-right: 0;\r\n      display: block;\r\n      height: auto;\r\n\r\n      .left {\r\n        margin-bottom: 15px;\r\n      }\r\n\r\n      .right {\r\n        justify-content: flex-start;\r\n      }\r\n    }\r\n\r\n\r\n    .mat-row {\r\n      display: block;\r\n      overflow: hidden;\r\n      height: auto;\r\n      min-height: 0;\r\n      margin: 0 0 15px;\r\n      padding: 0 15px;\r\n      border-radius: 4px;\r\n      @include mat-elevation(1);\r\n      position: relative;\r\n\r\n      &:last-of-type {\r\n        margin-bottom: 0;\r\n      }\r\n    }\r\n\r\n    .mat-row::after {\r\n      display: none;\r\n    }\r\n\r\n    .mat-cell {\r\n      margin: 16px 0;\r\n      min-height: 0;\r\n\r\n      &:first-of-type {\r\n        padding-left: 0;\r\n      }\r\n    }\r\n\r\n    [data-label] {\r\n      &:before {\r\n        content: attr(data-label);\r\n        display: inline;\r\n        font-weight: normal;\r\n        padding-right: 5px;\r\n        color: mat-color($app-foreground, secondary-text);\r\n      }\r\n    }\r\n\r\n    .hidden-on-mobile, .mat-column-select {\r\n      display: none;\r\n    }\r\n\r\n    .mat-column-edit {\r\n      position: absolute;\r\n      bottom: 8px;\r\n      right: 5px;\r\n      margin: 0;\r\n      padding: 0;\r\n    }\r\n\r\n    .filter-chip-list {\r\n      width: 100%;\r\n      margin-bottom: 15px;\r\n    }\r\n  }\r\n}","@import \"variables\";\r\n\r\n.multiline-mat-menu-item.mat-menu-item {\r\n  display: block;\r\n  white-space: normal;\r\n  line-height: normal;\r\n  height: auto;\r\n  min-height: 48px;\r\n  padding: 10px 16px;\r\n  font-size: 1.4rem;\r\n\r\n  .title {\r\n    font-size: 1.5rem;\r\n  }\r\n\r\n  .description {\r\n    color: mat-color($app-foreground, secondary-text);\r\n    margin-top: 3px;\r\n  }\r\n\r\n  &.active .description {\r\n    color: inherit;\r\n  }\r\n}\r\n\r\n.mat-menu-item.active {\r\n  color: mat-color($app-primary, default);\r\n\r\n  .title {\r\n    font-weight: 500;\r\n  }\r\n}","@import \"variables\";\r\n\r\n.setting-toggle-container {\r\n  margin-bottom: 30px;\r\n\r\n  &.margin-top {\r\n    margin-top: 30px;\r\n  }\r\n\r\n  &.margin-bottom {\r\n    margin-bottom: 30px;\r\n  }\r\n\r\n  p {\r\n    color: mat-color($app-foreground, secondary-text);\r\n    font-size: 1.3rem;\r\n    max-width: 600px;\r\n    margin-top: 5px;\r\n  }\r\n}","@import \"variables\";\r\n\r\n.selection-list {\r\n  .list-item {\r\n    &:hover .list-item-header {\r\n      background-color: mat-color($app-accent, emphasis);\r\n    }\r\n  }\r\n\r\n  .list-item-header {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 12px;\r\n    cursor: pointer;\r\n    border-radius: 4px;\r\n\r\n    .meta {\r\n      flex: 1 1 auto;\r\n      padding-right: 16px;\r\n    }\r\n\r\n    .mat-pseudo-checkbox {\r\n      flex-shrink: 0;\r\n      width: 16px;\r\n    }\r\n  }\r\n\r\n  .list-item-name {\r\n    font-size: 1.6rem;\r\n  }\r\n\r\n  .list-item-description {\r\n    margin: 0;\r\n  }\r\n\r\n  .list-item-restrictions {\r\n    padding: 10px 20px;\r\n    max-width: 400px;\r\n\r\n    label {\r\n      text-transform: capitalize;\r\n    }\r\n  }\r\n}","@import \"variables\";\r\n\r\n$ct-text-color: mat-color($app-foreground, secondary-text);\r\n$ct-text-size: 1.3rem;\r\n$ct-series-colors: (\r\n        #42A5F5,\r\n        #66BB6A,\r\n        #FF7043,\r\n        #5C6BC0,\r\n        #8D6E63,\r\n        #FFA726,\r\n        #26A69A,\r\n        #26C6DA,\r\n        #D4E157,\r\n        #8D6E63,\r\n        #BDBDBD,\r\n        #78909C,\r\n        #7E57C2,\r\n        #AB47BC,\r\n        #ef5350\r\n);\r\n\r\n.chart-row {\r\n  display: flex;\r\n\r\n  @media only screen and (max-width: $large) {\r\n    display: block;\r\n    margin-bottom: 0;\r\n\r\n    .chart {\r\n      margin-bottom: 25px;\r\n      overflow: hidden;\r\n    }\r\n  }\r\n}\r\n\r\n// add separators to pie chart slices\r\n.ct-slice-pie {\r\n  fill-opacity: 0.7;\r\n  stroke: #fff;\r\n  stroke-width: 2px;\r\n}\r\n\r\n// pie chart labels\r\n.ct-chart-pie .ct-label {\r\n  color: #fff;\r\n  fill: #fff;\r\n  font-weight: 500;\r\n}\r\n\r\n// line chart border width\r\n.ct-line {\r\n  stroke-width: 3px;\r\n}\r\n\r\n// chart legend colors\r\n@for $i from 1 to 15 {\r\n  .chart-legend .legend-item:nth-child(#{$i}):before {\r\n    background-color: nth($ct-series-colors, $i);\r\n  }\r\n}\r\n\r\n@import \"~chartist/dist/scss/chartist.scss\";","@import \"settings/chartist-settings\";\n\n@mixin ct-responsive-svg-container($width: 100%, $ratio: $ct-container-ratio) {\n  display: block;\n  position: relative;\n  width: $width;\n\n  &:before {\n    display: block;\n    float: left;\n    content: \"\";\n    width: 0;\n    height: 0;\n    padding-bottom: $ratio * 100%;\n  }\n\n  &:after {\n    content: \"\";\n    display: table;\n    clear: both;\n  }\n\n  > svg {\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n  }\n}\n\n@mixin ct-align-justify($ct-text-align: $ct-text-align, $ct-text-justify: $ct-text-justify) {\n  -webkit-box-align: $ct-text-align;\n  -webkit-align-items: $ct-text-align;\n  -ms-flex-align: $ct-text-align;\n  align-items: $ct-text-align;\n  -webkit-box-pack: $ct-text-justify;\n  -webkit-justify-content: $ct-text-justify;\n  -ms-flex-pack: $ct-text-justify;\n  justify-content: $ct-text-justify;\n  // Fallback to text-align for non-flex browsers\n  @if($ct-text-justify == 'flex-start') {\n    text-align: left;\n  } @else if ($ct-text-justify == 'flex-end') {\n    text-align: right;\n  } @else {\n    text-align: center;\n  }\n}\n\n@mixin ct-flex() {\n  // Fallback to block\n  display: block;\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n}\n\n@mixin ct-chart-label($ct-text-color: $ct-text-color, $ct-text-size: $ct-text-size, $ct-text-line-height: $ct-text-line-height) {\n  fill: $ct-text-color;\n  color: $ct-text-color;\n  font-size: $ct-text-size;\n  line-height: $ct-text-line-height;\n}\n\n@mixin ct-chart-grid($ct-grid-color: $ct-grid-color, $ct-grid-width: $ct-grid-width, $ct-grid-dasharray: $ct-grid-dasharray) {\n  stroke: $ct-grid-color;\n  stroke-width: $ct-grid-width;\n\n  @if ($ct-grid-dasharray) {\n    stroke-dasharray: $ct-grid-dasharray;\n  }\n}\n\n@mixin ct-chart-point($ct-point-size: $ct-point-size, $ct-point-shape: $ct-point-shape) {\n  stroke-width: $ct-point-size;\n  stroke-linecap: $ct-point-shape;\n}\n\n@mixin ct-chart-line($ct-line-width: $ct-line-width, $ct-line-dasharray: $ct-line-dasharray) {\n  fill: none;\n  stroke-width: $ct-line-width;\n\n  @if ($ct-line-dasharray) {\n    stroke-dasharray: $ct-line-dasharray;\n  }\n}\n\n@mixin ct-chart-area($ct-area-opacity: $ct-area-opacity) {\n  stroke: none;\n  fill-opacity: $ct-area-opacity;\n}\n\n@mixin ct-chart-bar($ct-bar-width: $ct-bar-width) {\n  fill: none;\n  stroke-width: $ct-bar-width;\n}\n\n@mixin ct-chart-donut($ct-donut-width: $ct-donut-width) {\n  fill: none;\n  stroke-width: $ct-donut-width;\n}\n\n@mixin ct-chart-series-color($color) {\n  .#{$ct-class-point}, .#{$ct-class-line}, .#{$ct-class-bar}, .#{$ct-class-slice-donut} {\n    stroke: $color;\n  }\n\n  .#{$ct-class-slice-pie}, .#{$ct-class-slice-donut-solid}, .#{$ct-class-area} {\n    fill: $color;\n  }\n}\n\n@mixin ct-chart($ct-container-ratio: $ct-container-ratio, $ct-text-color: $ct-text-color, $ct-text-size: $ct-text-size, $ct-grid-color: $ct-grid-color, $ct-grid-width: $ct-grid-width, $ct-grid-dasharray: $ct-grid-dasharray, $ct-point-size: $ct-point-size, $ct-point-shape: $ct-point-shape, $ct-line-width: $ct-line-width, $ct-bar-width: $ct-bar-width, $ct-donut-width: $ct-donut-width, $ct-series-names: $ct-series-names, $ct-series-colors: $ct-series-colors) {\n\n  .#{$ct-class-label} {\n    @include ct-chart-label($ct-text-color, $ct-text-size);\n  }\n\n  .#{$ct-class-chart-line} .#{$ct-class-label},\n  .#{$ct-class-chart-bar} .#{$ct-class-label} {\n    @include ct-flex();\n  }\n\n  .#{$ct-class-chart-pie} .#{$ct-class-label},\n  .#{$ct-class-chart-donut} .#{$ct-class-label} {\n    dominant-baseline: central;\n  }\n\n  .#{$ct-class-label}.#{$ct-class-horizontal}.#{$ct-class-start} {\n    @include ct-align-justify(flex-end, flex-start);\n    // Fallback for browsers that don't support foreignObjects\n    text-anchor: start;\n  }\n\n  .#{$ct-class-label}.#{$ct-class-horizontal}.#{$ct-class-end} {\n    @include ct-align-justify(flex-start, flex-start);\n    // Fallback for browsers that don't support foreignObjects\n    text-anchor: start;\n  }\n\n  .#{$ct-class-label}.#{$ct-class-vertical}.#{$ct-class-start} {\n    @include ct-align-justify(flex-end, flex-end);\n    // Fallback for browsers that don't support foreignObjects\n    text-anchor: end;\n  }\n\n  .#{$ct-class-label}.#{$ct-class-vertical}.#{$ct-class-end} {\n    @include ct-align-justify(flex-end, flex-start);\n    // Fallback for browsers that don't support foreignObjects\n    text-anchor: start;\n  }\n\n  .#{$ct-class-chart-bar} .#{$ct-class-label}.#{$ct-class-horizontal}.#{$ct-class-start} {\n    @include ct-align-justify(flex-end, center);\n    // Fallback for browsers that don't support foreignObjects\n    text-anchor: start;\n  }\n\n  .#{$ct-class-chart-bar} .#{$ct-class-label}.#{$ct-class-horizontal}.#{$ct-class-end} {\n    @include ct-align-justify(flex-start, center);\n    // Fallback for browsers that don't support foreignObjects\n    text-anchor: start;\n  }\n\n  .#{$ct-class-chart-bar}.#{$ct-class-horizontal-bars} .#{$ct-class-label}.#{$ct-class-horizontal}.#{$ct-class-start} {\n    @include ct-align-justify(flex-end, flex-start);\n    // Fallback for browsers that don't support foreignObjects\n    text-anchor: start;\n  }\n\n  .#{$ct-class-chart-bar}.#{$ct-class-horizontal-bars} .#{$ct-class-label}.#{$ct-class-horizontal}.#{$ct-class-end} {\n    @include ct-align-justify(flex-start, flex-start);\n    // Fallback for browsers that don't support foreignObjects\n    text-anchor: start;\n  }\n\n  .#{$ct-class-chart-bar}.#{$ct-class-horizontal-bars} .#{$ct-class-label}.#{$ct-class-vertical}.#{$ct-class-start} {\n    //@include ct-chart-label($ct-text-color, $ct-text-size, center, $ct-vertical-text-justify);\n    @include ct-align-justify(center, flex-end);\n    // Fallback for browsers that don't support foreignObjects\n    text-anchor: end;\n  }\n\n  .#{$ct-class-chart-bar}.#{$ct-class-horizontal-bars} .#{$ct-class-label}.#{$ct-class-vertical}.#{$ct-class-end} {\n    @include ct-align-justify(center, flex-start);\n    // Fallback for browsers that don't support foreignObjects\n    text-anchor: end;\n  }\n\n  .#{$ct-class-grid} {\n    @include ct-chart-grid($ct-grid-color, $ct-grid-width, $ct-grid-dasharray);\n  }\n\n  .#{$ct-class-grid-background} {\n    fill: $ct-grid-background-fill;\n  }\n\n  .#{$ct-class-point} {\n    @include ct-chart-point($ct-point-size, $ct-point-shape);\n  }\n\n  .#{$ct-class-line} {\n    @include ct-chart-line($ct-line-width);\n  }\n\n  .#{$ct-class-area} {\n    @include ct-chart-area();\n  }\n\n  .#{$ct-class-bar} {\n    @include ct-chart-bar($ct-bar-width);\n  }\n\n  .#{$ct-class-slice-donut} {\n    @include ct-chart-donut($ct-donut-width);\n  }\n\n  @if $ct-include-colored-series {\n    @for $i from 0 to length($ct-series-names) {\n      .#{$ct-class-series}-#{nth($ct-series-names, $i + 1)} {\n        $color: nth($ct-series-colors, $i + 1);\n\n        @include ct-chart-series-color($color);\n      }\n    }\n  }\n}\n\n@if $ct-include-classes {\n  @include ct-chart();\n\n  @if $ct-include-alternative-responsive-containers {\n    @for $i from 0 to length($ct-scales-names) {\n      .#{nth($ct-scales-names, $i + 1)} {\n        @include ct-responsive-svg-container($ratio: nth($ct-scales, $i + 1));\n      }\n    }\n  }\n}\n","@import \"variables\";\r\n\r\n$spacing: 10px;\r\n\r\nappearance {\r\n  .nav-item {\r\n    user-select: none;\r\n    cursor: pointer;\r\n    outline: 0;\r\n    border: 1px solid mat-color($app-foreground, divider);\r\n    -webkit-tap-highlight-color: transparent;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    display: flex;\r\n    text-decoration: none;\r\n    text-align: left;\r\n    align-items: center;\r\n    padding: 0 10px 0 15px;\r\n    margin-bottom: $spacing;\r\n    border-radius: 4px;\r\n    background-color: mat-color($app-background, card);\r\n    height: 57px;\r\n    width: 100%;\r\n    font-size: 1.5rem;\r\n    color: inherit;\r\n    text-transform: capitalize;\r\n\r\n    &:hover {\r\n      background-color: mat-color($app-accent, emphasis);\r\n    }\r\n\r\n    .mat-icon {\r\n      color: mat-color($app-foreground, icon);\r\n    }\r\n    \r\n    .text {\r\n      display: block;\r\n    }\r\n\r\n    .actions {\r\n      display: block;\r\n      margin-left: auto;\r\n    }\r\n  }\r\n\r\n  .input-container {\r\n    input, select, textarea {\r\n      background-color: mat-color($app-background, card);\r\n    }\r\n  }\r\n\r\n  .appearance-panel-content {\r\n    padding: $spacing;\r\n  }\r\n\r\n  .back-button {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 50px;\r\n    height: 100%;\r\n    color: mat-color($app-foreground, icon);\r\n    padding: 10px;\r\n    border-right: 1px solid mat-color($app-foreground, divider);\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      background-color: mat-color($app-accent, emphasis);\r\n    }\r\n\r\n    .mat-icon {\r\n      width: 30px;\r\n      height: 30px;\r\n    }\r\n  }\r\n}","@import \"variables\";\r\n\r\n.admin-pill-nav {\r\n  width: 250px;\r\n  flex-shrink: 0;\r\n  margin-right: 30px;\r\n\r\n  .nav-item {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 10px 15px;\r\n    cursor: pointer;\r\n    text-transform: capitalize;\r\n    white-space: nowrap;\r\n    margin-bottom: 5px;\r\n    color: mat-color($app-foreground, text);\r\n    position: relative;\r\n    border-left: 4px solid transparent;\r\n    border-radius: 4px;\r\n\r\n    &:hover {\r\n      background-color: mat-color($app-background, hover);\r\n    }\r\n\r\n    &.selected {\r\n      background-color: mat-color($app-accent, emphasis);\r\n      border-color: mat-color($app-accent, default);\r\n      font-weight: 500;\r\n    }\r\n  }\r\n\r\n  .name {\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n  }\r\n\r\n  .actions {\r\n    color: mat-color($app-foreground, icon);\r\n    margin-left: auto;\r\n  }\r\n\r\n  .mat-icon-button {\r\n    width: 30px;\r\n    height: 30px;\r\n    line-height: 30px;\r\n  }\r\n}\r\n\r\nbutton.admin-pill-nav-mobile-selector {\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  border-radius: 4px;\r\n  border: 1px solid mat-color($app-foreground, divider);\r\n  padding: 15px;\r\n  text-transform: capitalize;\r\n  background-color: mat-color($app-background, card);\r\n\r\n  .mat-icon {\r\n    margin-left: auto;\r\n  }\r\n}\r\n\r\n.admin-pill-nav-menu.mat-menu-panel {\r\n  min-width: 200px;\r\n\r\n  .mat-menu-item {\r\n    text-transform: capitalize;\r\n  }\r\n\r\n  .selected {\r\n    color: mat-color($app-accent, default);\r\n  }\r\n}","@import \"variables\";\r\n\r\n.be-dark-mode {\r\n\r\n  // fix scrollbars on chrome\r\n  ::-webkit-scrollbar {\r\n    width: 8px;\r\n    background-color: transparent; // TODO: add color for track maybe\r\n  }\r\n\r\n  ::-webkit-scrollbar-thumb {\r\n    background-color: mat-color($app-foreground, divider);\r\n    border-radius: 3px;\r\n\r\n    &:hover {\r\n      background-color: mat-color($app-foreground, divider);\r\n    }\r\n  }\r\n\r\n  // make input borders thicker so they are easier\r\n  // to see as input bg will be transparent usually\r\n  .input-container {\r\n    input, select, textarea, .fake-input {\r\n      border-width: 1.5px;\r\n    }\r\n  }\r\n\r\n  // make material slide toggle thumb darker\r\n  .mat-slide-toggle-thumb {\r\n    background-color: #bdbdbd;\r\n  }\r\n\r\n  // fix native select dropdown color\r\n  select, option {\r\n    background-color: mat-color($app-background, card);\r\n    color: mat-color($app-foreground, text);\r\n  }\r\n\r\n  // invert material snackbar colors\r\n  .mat-snack-bar-container {\r\n    background-color: #fafafa;\r\n    color: rgba(0,0,0,0.87);\r\n  }\r\n\r\n  .mat-simple-snackbar-action {\r\n    color: inherit;\r\n  }\r\n\r\n  // fix mat checkbox and pseudo checkbox disabled colors\r\n  .mat-pseudo-checkbox-disabled {\r\n    color: #686868;\r\n  }\r\n\r\n  .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled, .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled {\r\n    background-color: #686868;\r\n  }\r\n\r\n  .mat-checkbox-disabled {\r\n    &.mat-checkbox-checked,\r\n    &.mat-checkbox-indeterminate {\r\n      .mat-checkbox-background {\r\n        background-color: #686868;\r\n      }\r\n    }\r\n\r\n    &:not(.mat-checkbox-checked) {\r\n      .mat-checkbox-frame {\r\n        border-color: #686868;\r\n      }\r\n    }\r\n  }\r\n\r\n  // fix material button toggle checked color on disabled toggle\r\n  .mat-button-toggle-disabled.mat-button-toggle-checked {\r\n    background-color: #424242;\r\n  }\r\n\r\n  // material navbar should be dark as well instead of using primary color\r\n  material-navbar:not(.transparent) {\r\n    //background-color: mat-color($app-background, card);\r\n    border-bottom: 1px solid mat-color($app-foreground, divider-lighter);\r\n  }\r\n\r\n  material-navbar .nav-searchbar input:active, material-navbar .nav-searchbar input:focus {\r\n    background-color: rgba(255, 255, 255, 0.09);\r\n  }\r\n}","@import \"common-imports\";\r\n\r\nbutton.more-less-button {\r\n  padding-left: 5px;\r\n  //color: mat-color($app-accent, default);\r\n  font-weight: 500;\r\n}\r\n\r\n.play-button-animation.mat-mini-fab, .play-button-animation.mat-fab {\r\n  transition: background .4s cubic-bezier(.25, .8, .25, 1), box-shadow 280ms cubic-bezier(.4, 0, .2, 1), transform .3s cubic-bezier(0, 0, 0, 2.41);\r\n\r\n  &:hover {\r\n    transform: scale(1.2);\r\n  }\r\n}\r\n"],"sourceRoot":""}